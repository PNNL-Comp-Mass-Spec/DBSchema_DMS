This file is mirrored at 
F:\My Documents\Projects\DataMining\Database_Schema\DMS
  and 
F:\My Documents\SoftwareUpdates

Software Installation for a Dell R720
July 19, 2012

Confirm that the first two drives are setup in RAID 1 (mirrored)

Install Windows 2008 R2
	- Extract the PERC driver files from PERC_DRVR_WIN_J3J13_5.1.118.64_A01_ZPE.exe and copy to a USB drive
	- Boot from the Windows 2008 R2 DVD and choose Install
	- During Windows setup, select the driver files from the USB drive

Join the domain
	Call the help desk to ask that an entry be made in the domain for the computer
	Join the domain using Start->Control Panel->System then Advanced System Settings
	Once you have joined the domain, Windows should auto-activate and Forefront should auto-install (within 24 hours)

Install Windows 2008 Roles:
	Start->Administrative Tools->Server Manager
		DNS Server (only needed on Gigasax)
	File Services
		Use defaults (everything unchecked, except for "File Services")
	Web Server
		Use defaults, but add: Windows Authentication, Digest Authentication

Install Windows 2008 Features
	Start->Administrative Tools->Server Manager
		Remote server administration
			DNS Server Tools and IIS Tools get auto-installed
		.NET Framework 3.5.1

Install the drivers
	Download from Dell Support: http://www.dell.com/support/troubleshooting/us/en/555/Index?c=us&s=biz&cs=555&l=en
	Intel Chipset driver:
		Intel_C600_X79_Series_Chipset_A01_ZPE.exe
	Network Driver: 
		Network_Driver_Bcom_LAN_17.0.1_W2K8_64_A00.exe
	Video Card driver:
		Video_Driver_A00_WIN64_G200eR_v2.4.1.0.exe

Install Dell Server Administrator
	OM-SrvAdmin-Dell-Web-WIN-7.1.0-5304_A00

Customize Remote Desktop Connection
	Start->Control Panel->System
	Choose "Remote Settings"
	Select "Allow connections from computers running any version of Remote Desktop (less secure)"

Configure DNS on Gigasax3
	Start->Administrative Tools->Server Manager->Roles-> DNS Server->DNS
		Right click Gigasax3 and choose "Configure a DNS server"
			Select "Create a forward lookup zone"
			Choose "This server maintains the zone"
			Zone name: Bionet
			For the Zone File, choose "Use this existing file"
				To create this file, connect to Gigasax, and go to C:\Windows\System32\dns
				Copy file BIONet.dns over to Gigasax3
				Place the file at C:\Windows\System32\dns on Gigasax3
			Select "Do not allow dynamic updates"
			Select "No, it should not forward queries"
			Click "Finish"

		Right click Gigasax3 and choose "Properties"
			On the Interfaces tab, enable DNS only for the IP addresses on Bionet:
				fe80::b4a1:6248:cbd8:49a8
				192.168.30.65              (will later change this to 192.168.30.68 once Gigasax3 replaces Gigasax)
			The Forwarders tab should be blank
			On the Advanced tab:
				Check: Disable recursion
				Check: Enable round robin
				Check: Enable netmask ordering
				Check: Secure cache against pollution
			On Monitoring, choose "A simple query against this DNS server then click "Test Now".  Should report "Passed"
			Click OK

Go to Control Panel->System->Advanced System Settings
	Define Environment Variable DIRCMD with value /OGEN
	Update path to include ";C:\Program Files (x86)\SysinternalsSuite;C:\Program Files (x86)\Windows Resource Kits\Tools"
	On the Advanced tab, in the Performance section, choose "Settings", then set to "Adjust for best performance"

Start Internet Explorer and customize options
	Go to Tools->Internet Options->Advanced
	Enable "Use inline Autocomplete"
	Disable "Use smooth scrolling"
	Disable "Always use clear type"

Install .NET 4
	dotNetFx40_Full_x86_x64.exe

Install Google Chrome
	Downloaded .exe from http://www.google.com/chrome/eula.html?system=true&standalone=1
	Copied to \\prismdevii\past\Software\Chrome
		
Install programs
	7-zip: 7z920-x64.msi
	Editpad: 10UserLicense_EditpadPro(v6.5.2)_Reg_PNL.exe
		Import settings from EditPadPro_V6_MonroeSettings_2008-12-15.ini
		Use Options->Font to change the default font to Courier New, 10 point
	File Locator Lite: FileLocatorLite_64bit_FileSearchingTool_v2010.03.29_Build762.exe
		Install to C:\Program Files\FileLocator Lite\
	WinDirStat (for visualizing space usage): windirstat1_1_2_setup.exe
	Beyond Compare: beycompare_v2.5.3_2008July14.exe
		Update registry with BeyondCompareRegInfo.reg and BeyondCompareRegInfo_AllUsers.reg
	Unzip SysinternalsSuite_2012-07-19.zip to C:\Program Files (x86)\SysinternalsSuite
		Add shortcuts to start menu for:
			AD Explorer       (ADExplorer.exe)
			Autoruns          (autoruns.exe)
			Process Explorer  (procexp.exe)
			Process Monitor   (Procmon.exe)
		Go to C:\Program Files (x86)\SysinternalsSuite, right click ProcExp.exe and choose properties
			On the Compatibility tab, enable "Run as Administrator"
	Copy PSUptime.exe from \\prismdevii\past\Software\SysInternalsTools\PSTools to C:\Program Files (x86)\SysinternalsSuite
		- Name it both PSUptime and uptime.exe

	Copy Resource Kit files to C:\Program Files (x86)\Windows Resource Kits\Tools
		\\prismdevii\past\Software\SysInternalsTools\Windows2000_ResourceKit
		\\prismdevii\past\Software\SysInternalsTools\Windows2003_ResourceKitTools



Configure the MD-1200 Storage Array using Dell Server Administrator
	Note: If IE ESC is enabled, you'll need to add the computer's website to the Trusted Sites in IE
		Use Tools->Internet Options->Security->Trust Sites
		Click Sites
		Make sure the computer name is present, e.g. https://gigasax3
		Click "Add"

	You need to use Internet explorer
	Login as user memadmin
		You first login via a popup window from IE
		You next login to a black and grey window that says "Dell OpenManage"
			- Leave "active directory" Unchecked

	== Gigasax3 ==
		Setup the following arrays under Storage, PERC H710P, Virtual Disks
		Choose "Go to the Create Virtual Disk Wizard" to create each array
	
		Array System, on C:
			2 drives in RAID 1 --> 279 GB
			Physical disks 0:1:0 and 0:1:1
	
		DVD drive is D:
	
		Array ParamFiles
			Holds Parameter Files and Fasta files
			2 drives in RAID 1 --> 279 GB
			Physical disks 0:1:2 and 0:1:3
			Format as NTFS with default sector size (4 KB), designate E: drive
	
		Array SQLLogs 
			Holds the DB .log files
			2 drives in RAID 1 --> 279 GB
			Physical disks 0:1:4 and 0:1:5
			Format as NTFS with 64 KB sector size, designate G: drive
	
		Array SQLData1
			Holds DMS5 & DMS_Capture .mdf files
			2 drives in RAID 1 --> 279 GB
			Physical disks 0:1:6 and 0:1:7		
			Format as NTFS with 64 KB sector size, designate H: drive
	
		Array SQLData2
			Holds DMS_Pipeline & possibly Mgr_Control .mdf files
			2 drives in RAID 1 --> 279 GB
			Physical disks 0:1:8 and 0:1:9
			Format as NTFS with 64 KB sector size, designate I: drive

	== Proteinseqs3 ==
		Setup the following arrays under Storage, PERC H710P, Virtual Disks
		Choose "Go to the Create Virtual Disk Wizard" to create each array
	
		Array System, on C:
			2 drives in RAID 1 --> 279 GB
			Physical disks 0:1:0 and 0:1:1
	
		DVD drive is D:

		Array SqlTempDB	
			Holds TempDB 
			2 drives in RAID 1 --> 279 GB
			Physical disks 0:1:2 and 0:1:3
			Format as NTFS with 64 KB sector size, designate E: drive

		Array SQLLogs 
			Holds the DMS/MTS DB .log files
			2 drives in RAID 1 --> 279 GB
			Physical disks 0:1:4 and 0:1:5
			Format as NTFS with 64 KB sector size, designate H: drive

		Array SQLData
			Holds DMS/MTS DB .mdf files
			8 drives in RAID 10 --> 1.1 TB
			One hot spare
			Physical disks 0:1:? thru 0:1:?
			Format as NTFS with 64 KB sector size, designate I: drive

		Array PMData	
			Holds Peak Matching results
			Also holds TempDB log file
			2 drives in RAID 1 --> 279 GB
			Physical disks 0:1:? and 0:1:?
			Format as NTFS with 4 KB sector size, designate L: drive

	
Format the disks using Server Manager->Storage->Disk Management
	When Windows prompts you to Initialize the Disk , choose "GPT"
	Next, right click each new disk and choose "New simple volume"
	Select the drive letter, change the sector size to 64 KB (for drives G, H, and I), define the Name, and click "Format"


Configure the system page file (Only do this on Gigasax3; leave it on the C: drive for ProteinSeqs3)
	Start->Control Panel->System
	Click "Advanced system settings"
	Click "Settings" under performance, then choose the Advanced tab
	Click "Change" under virtual memory
	Define a page file on the C: drive, with minimum size 1024 MB and max size 2048 MB
	Define a second page file on the E: drive (param files), with a "System managed size"
	- Changes won't take effect until after the computer reboots.

	
Configure local policy using gpedit.msc
	NOTE: These settings are under "User Configuration", not under "Computer Configuration"

	Under User Configuration, Administrative Templates, Windows Components, Internet Explorer
		Set Turn on Menu Bar by Default to Enabled

	Under User Configuration, Administrative Templates, Start Menu and Taskbar
		Set Add Logoff to Start Menu to Enabled
		Set Remove and prevent access to the shut down, restart, sleep, and hibernate
		Set Remove Games Link from Start Menu to Enabled
		Set Remove Music icon from Start Menu to Enabled
		Set Remove Network icon to Enabled
		Set Remove the volume control icon to Enabled


Configure BBWin big brother client
	Copy files from "\\prismdevii\past\Software\BBWin_Hobbit_Client" to "C:\Program Files (x86)\BBWin\"
	Customize .cfg file at C:\Program Files (x86)\BBWin\etc\BBWin.cfg
	Install service by going to command prompt as administrator, then:
		cd "C:\Program Files (x86)\BBWin\bin"
		bbwin -install
		Import the registry entries from BBWin_RegSettings_64BitWindows.reg
		net start bbwin
	Go to Services in the control panel and change bbwin to start automatically

	Note that the installer will make registry entries at HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\BBWin (these shouldn't need to be customized)
		If the registry entries don't get auto-created, import these values:

Windows Registry Editor Version 5.00

[HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\BBWin]
"binpath"="C:\\Program Files (x86)\\BBWin\\bin"
"etcpath"="C:\\Program Files (x86)\\BBWin\\etc"
"tmppath"="C:\\Program Files (x86)\\BBWin\\tmp"
"hostname"="%COMPUTERNAME%"


	Don't enable BB monitoring on Gigasax3 or ProteinSeqs3 until after the machines are renamed to
	Gigasax and ProteinSeqs

	Note: To remove the Quest BB service, use this:
	sc delete BigBrotherClient

Configure the Local Windows Users and Groups
	== Gigasax3 ==
		Create user LCMSOperator -- BioNet LCMSOperator      Nosoup4u
		Create user FTMS         -- BioNet FTMS user         Icrs4fun
			Note that the passwords for these users will be auto-updated via the PasswordUpdateTool, which is called via two Scheduled Tasks
		Add to the Administrators Group:
			PNL\DMS Admins
			PNL\Domain Admins
			PNL\EMSL WinServer Administration Accounts
			MEMAdmin
		Add to the Remote Desktop Users
			PNL\EMSL WinServer Log-in Accounts
		Create local group DMS_LCMSNet_Users
			LCMSOperator
			D3E154
			D3M276
			D3M957
		Create local group DMS_Org_Database_Admin
			D3K857
			D3L243
			D3M578
		Skip group DMS_Org_Database_Uploader; just use "PNL\EMSL-PRISM.Users.DMS proteinseqs upload users" on the share
		Skip group DMS_ParamFile_Admin; just use "PNL\EMSL-PRISM.Users.Param_File_Admin" on the share

	== ProteinSeqs3 ==
		Add to the Administrators Group:
			PNL\DMS Admins
			PNL\Domain Admins
			PNL\EMSL WinServer Administration Accounts
			^RBAC EMSL-Prism.MTS.MTS_Sys_Admin
			MEMAdmin
			MTSAdmin
		Add to the Remote Desktop Users
			PNL\EMSL WinServer Log-in Accounts
		Create local group MTS_DB_Dev
			Change-access to MTS DBs
			Members: ^RBAC EMSL-Prism.MTS.MTS_DB_Dev
		Create local group MTS_DB_Lite
			Limited change rights to MTS DBs
			Members: ^RBAC EMSL-Prism.MTS.MTS_DB_Lite
		Create local group MTS_DB_Reader
			Read-only access to MTS DBs
			Members: ^RBAC EMSL-Prism.MTS.MTS_DB_Reader
		Create local group ProteinSeqs_Upload_Users
			Members: "^RBAC EMSL-Prism.Users.DMS ProteinSeqs Upload Users"
					  ^RBAC EMSL-Prism.Users.Web_Analysis

Give certain users "Logon as a Batch" permissions in Windows
	a) Go to Start, Administrative Tools, Local Security Policy
	b) In the Local Security Policy window, choose Security Settings, Local Policies, User Rights Assignment
	c) Now double click "Log on as a batch job" and click "Add user or group"
		ProteinSeqs3: 
			Add user:   pnl\mtsproc
		Gigasax3:
			Add users:  pnl\mtsproc

	If you get "access denied" then start an administrative-level command prompt, then run secpol.msc

Give certain users "Logon as a Service" permissions in Windows
	a) Go to Start, Administrative Tools, Local Security Policy
	b) In the Local Security Policy window, choose Security Settings, Local Policies, User Rights Assignment
	c) Now double click "Log on as a service" and click "Add user or group"
		ProteinSeqs3: 
			Add user:   pnl\mtsadmin
		Gigasax3:
			Add users:  pnl\msdadmin; pnl\svc-dms

Create scheduled tasks on Gigasax3
	1) SetP_FTMS
		- Run as user "System"
		- Checkbox "Run with highest privileges"
		- Run at 11 pm on Day 1 of each month
		- Start a program
			- C:\DMS_Programs\PasswordUpdateTool\SetP_FTMS.bat
		- Start in 
			- C:\DMS_Programs\PasswordUpdateTool\
		- Stop if running for more than 2 hours

	2) SetP_LCMSOperator
		- Run as user "System"
		- Checkbox "Run with highest privileges"
		- Run at 11 pm on Day 1 of each month
		- Start a program
			- C:\DMS_Programs\PasswordUpdateTool\SetP_LCMSOperator.bat
		- Start in 
			- C:\DMS_Programs\PasswordUpdateTool\
		- Stop if running for more than 2 hours

	3) Update Forefront Endpoint Protection definitions
		- Desription: 
			Update Forefront Endpoint Protection definitions
		- Run as user "System"
		- Run with normal privileges
		- Run daily at 7:20 am
		- Run daily at 7:20 pm
		- Start a program
			- C:\FEP_Updates\UpdateDefinitions.bat
		- Start in 
			- C:\FEP_Updates\
		- Stop if running more than 2 hours

Created shared folders
	== Gigasax3 ==
		AScore_Params
		DIM_Trigger
		DMS_InstSourceDirScans
		DMS_FASTA_File_Archive
		DMS_Organism_Files
		DMS_Parameter_Files
		DMS_Programs
		DMS_Workflows
		FEP_Updates
		
		rmtshare \\Gigasax\AScore_Params=E:\DMS_Parameter_Files\AScore /Remark:"" /GRANT "PNL\DMS Admins":Full
		rmtshare \\Gigasax\AScore_Params /Grant "Administrators":Full
		rmtshare \\Gigasax\AScore_Params /Grant "PNL\EMSL-Prism.Users.DMS_User":Read
		rmtshare \\Gigasax\AScore_Params /Grant "PNL\EMSL-Prism.Users.DMS_Guest":Read
		rmtshare \\Gigasax\AScore_Params /Grant "EMSL-Prism.Users.Param_File_Admin":Change
		rmtshare \\Gigasax\AScore_Params /Grant "PNL\aldr699":Change
		
psexec \\gigasax cacls E:\DMS_Parameter_Files\AScore /E /G PNL\aldr699:C
		
		
		rmtshare \\Gigasax3\DIM_Trigger=E:\DIM_Trigger /Remark:"" /GRANT "PNL\DMS Admins":Full
		rmtshare \\Gigasax3\DIM_Trigger /Grant "Administrators":Full
		rmtshare \\Gigasax3\DIM_Trigger /Grant "PNL\EMSL-Prism.Users.DMS_User":Read
		rmtshare \\Gigasax3\DIM_Trigger /Grant "PNL\EMSL-Prism.Users.DMS_Pwr_User":Change
		rmtshare \\Gigasax3\DIM_Trigger /Grant "PNL\D3L243":Change
		rmtshare \\Gigasax3\DIM_Trigger /Grant "PNL\D3M957":Change
		
		cacls E:\DIM_Trigger /E /G PNL\EMSL-Prism.Users.DMS_Pwr_User:C
		cacls E:\DIM_Trigger /E /G PNL\D3L243:C
		cacls E:\DIM_Trigger /E /G PNL\D3M957:C
		
		
		rmtshare \\Gigasax3\DMS_InstSourceDirScans=E:\DMS_InstSourceDirScans /Remark:"" /GRANT "PNL\DMS Admins":Full
		rmtshare \\Gigasax3\DMS_InstSourceDirScans /Grant "Administrators":Full
		rmtshare \\Gigasax3\DMS_InstSourceDirScans /Grant "PNL\EMSL-Prism.Users.DMS_User":Read
		rmtshare \\Gigasax3\DMS_InstSourceDirScans /Grant "PNL\EMSL-Prism.Users.DMS_Guest":Read
		rmtshare \\Gigasax3\DMS_InstSourceDirScans /Grant "PNL\EMSL-Prism.Users.DMS_Pwr_User":Change
		rmtshare \\Gigasax3\DMS_InstSourceDirScans /Grant "PNL\svc-dms":Change
		
		cacls E:\DMS_InstSourceDirScans /E /G PNL\EMSL-Prism.Users.DMS_Pwr_User:C
		cacls E:\DMS_InstSourceDirScans /E /G PNL\svc-dms:C

		
		rmtshare \\Gigasax3\DMS_FASTA_File_Archive=G:\DMS_FASTA_File_Archive /Remark:"" /GRANT "PNL\DMS Admins":Full
		rmtshare \\Gigasax3\DMS_FASTA_File_Archive /Grant "Administrators":Full
		rmtshare \\Gigasax3\DMS_FASTA_File_Archive /Grant "PNL\EMSL-Prism.Users.DMS_User":Read
		rmtshare \\Gigasax3\DMS_FASTA_File_Archive /Grant "PNL\EMSL-Prism.Users.DMS_Guest":Read
		rmtshare \\Gigasax3\DMS_FASTA_File_Archive /Grant "PNL\EMSL-Prism.Users.DMS_Pwr_User":Change
		rmtshare \\Gigasax3\DMS_FASTA_File_Archive /Grant "PNL\EMSL-Prism.Users.Org_DB_File_Admin":Change
		
		cacls G:\DMS_FASTA_File_Archive /E /G PNL\EMSL-Prism.Users.DMS_Pwr_User:C
		cacls G:\DMS_FASTA_File_Archive /E /G PNL\EMSL-Prism.Users.Org_DB_File_Admin:C
		
		
		rmtshare \\Gigasax3\DMS_Organism_Files=E:\DMS_Organism_Files /Remark:"" /GRANT "PNL\DMS Admins":Full
		rmtshare \\Gigasax3\DMS_Organism_Files /Grant "Administrators":Full
		rmtshare \\Gigasax3\DMS_Organism_Files /Grant "PNL\EMSL-Prism.Users.DMS_User":Read
		rmtshare \\Gigasax3\DMS_Organism_Files /Grant "PNL\EMSL-Prism.Users.DMS_Guest":Read
		rmtshare \\Gigasax3\DMS_Organism_Files /Grant "PNL\EMSL-Prism.Users.DMS_Pwr_User":Change
		rmtshare \\Gigasax3\DMS_Organism_Files /Grant "PNL\EMSL-Prism.Users.Org_DB_File_Admin":Change
		
		cacls E:\DMS_Organism_Files /E /G PNL\EMSL-Prism.Users.DMS_Pwr_User:C
		cacls E:\DMS_Organism_Files /E /G PNL\EMSL-Prism.Users.Org_DB_File_Admin:C
		
		
		rmtshare \\Gigasax3\DMS_Parameter_Files=E:\DMS_Parameter_Files /Remark:"" /GRANT "PNL\DMS Admins":Full
		rmtshare \\Gigasax3\DMS_Parameter_Files /Grant "Administrators":Full
		rmtshare \\Gigasax3\DMS_Parameter_Files /Grant "PNL\EMSL-Prism.Users.DMS_User":Read
		rmtshare \\Gigasax3\DMS_Parameter_Files /Grant "PNL\EMSL-Prism.Users.DMS_Guest":Read
		rmtshare \\Gigasax3\DMS_Parameter_Files /Grant "PNL\EMSL-Prism.Users.Param_File_Admin":Change
		
		cacls E:\DMS_Parameter_Files /E /G PNL\EMSL-Prism.Users.Param_File_Admin:C
		
		
		rmtshare \\Gigasax3\DMS_Programs=C:\DMS_Programs /Remark:"" /GRANT "PNL\DMS Admins":Full
		rmtshare \\Gigasax3\DMS_Programs /Grant "Administrators":Full
		rmtshare \\Gigasax3\DMS_Programs /Grant "PNL\EMSL-Prism.Users.DMS_User":Read
		rmtshare \\Gigasax3\DMS_Programs /Grant "PNL\EMSL-Prism.Users.DMS_Guest":Read
		rmtshare \\Gigasax3\DMS_Programs /Grant "PNL\D3L243":Change
		rmtshare \\Gigasax3\DMS_Programs /Grant "PNL\D3Y513":Change
		rmtshare \\Gigasax3\DMS_Programs /Grant "PNL\D3M480":Change
		
		cacls C:\DMS_Programs /E /G PNL\D3L243:C
		cacls C:\DMS_Programs /E /G PNL\D3Y513:C
		cacls C:\DMS_Programs /E /G PNL\D3M480:C
		
		
		rmtshare \\Gigasax3\DMS_Workflows=E:\DMS_Workflows /Remark:"" /GRANT "PNL\DMS Admins":Full
		rmtshare \\Gigasax3\DMS_Workflows /Grant "Administrators":Full
		rmtshare \\Gigasax3\DMS_Workflows /Grant "PNL\EMSL-Prism.Users.DMS_User":Read
		rmtshare \\Gigasax3\DMS_Workflows /Grant "PNL\EMSL-Prism.Users.DMS_Guest":Read
		rmtshare \\Gigasax3\DMS_Workflows /Grant "PNL\EMSL-Prism.Users.Param_File_Admin":Change
		rmtshare \\Gigasax3\DMS_Workflows /Grant "PNL\EMSL-Prism.Users.Workflow_Admin":Change
		
		cacls E:\DMS_Workflows /E /G PNL\EMSL-Prism.Users.Param_File_Admin:C
		cacls E:\DMS_Workflows /E /G PNL\EMSL-Prism.Users.Workflow_Admin:C
		
		
		rmtshare \\Gigasax3\FEP_Updates=C:\FEP_Updates /Remark:"" /GRANT "Administrators":Change
		rmtshare \\Gigasax3\FEP_Updates /Grant "PNL\D3L243":Change
		rmtshare \\Gigasax3\FEP_Updates /Grant "Everyone":Read
		
		cacls C:\FEP_Updates /E /G Everyone:R
		cacls C:\FEP_Updates /E /G PNL\D3L243:C

	== Proteinseqs3 ==
		GA_Net_Xfer
		MTD_Peak_Matching
		Peptide_Prophet_Xfer
		
		
		rmtshare \\Proteinseqs3\GA_Net_Xfer=E:\GA_Net_Xfer /Remark:"" /GRANT "Administrators":Full
		rmtshare \\Proteinseqs3\GA_Net_Xfer /Grant "PNL\EMSL-Prism.MTS.MTS_DB_Dev":Change
		rmtshare \\Proteinseqs3\GA_Net_Xfer /Grant "PNL\EMSL-Prism.MTS.MTS_DB_Lite":Read
		rmtshare \\Proteinseqs3\GA_Net_Xfer /Grant "PNL\EMSL-Prism.MTS.MTS_DB_Reader":Read
		rmtshare \\Proteinseqs3\GA_Net_Xfer /Grant "PNL\mtsproc":Change
		rmtshare \\Proteinseqs3\GA_Net_Xfer /Grant "PNL\EMSL-Prism.Users.DMS_User":Read
		
		cacls E:\GA_Net_Xfer /E /G PNL\mtsproc:C
		cacls E:\GA_Net_Xfer /E /G PNL\EMSL-Prism.MTS.MTS_DB_Dev:C
		
		
		rmtshare \\Proteinseqs3\Peptide_Prophet_Xfer=E:\Peptide_Prophet_Xfer /Remark:"" /GRANT "Administrators":Full
		rmtshare \\Proteinseqs3\Peptide_Prophet_Xfer /Grant "PNL\EMSL-Prism.MTS.MTS_DB_Dev":Change
		rmtshare \\Proteinseqs3\Peptide_Prophet_Xfer /Grant "PNL\EMSL-Prism.MTS.MTS_DB_Lite":Read
		rmtshare \\Proteinseqs3\Peptide_Prophet_Xfer /Grant "PNL\EMSL-Prism.MTS.MTS_DB_Reader":Read
		rmtshare \\Proteinseqs3\Peptide_Prophet_Xfer /Grant "PNL\mtsproc":Change
		rmtshare \\Proteinseqs3\Peptide_Prophet_Xfer /Grant "PNL\EMSL-Prism.Users.DMS_User":Read
		
		cacls E:\Peptide_Prophet_Xfer /E /G PNL\mtsproc:C
		cacls E:\Peptide_Prophet_Xfer /E /G PNL\EMSL-Prism.MTS.MTS_DB_Dev:C
		
		
		rmtshare \\Proteinseqs\MTD_Peak_Matching=L:\MTD_Peak_Matching /Remark:"" /GRANT "Administrators":Full
		rmtshare \\Proteinseqs\MTD_Peak_Matching /Grant "PNL\EMSL-Prism.MTS.MTS_DB_Dev":Read
		rmtshare \\Proteinseqs\MTD_Peak_Matching /Grant "PNL\EMSL-Prism.MTS.MTS_DB_Lite":Read
		rmtshare \\Proteinseqs\MTD_Peak_Matching /Grant "PNL\EMSL-Prism.MTS.MTS_DB_Reader":Read
		rmtshare \\Proteinseqs\MTD_Peak_Matching /Grant "PNL\mtsproc":Change
		rmtshare \\Proteinseqs\MTD_Peak_Matching /Grant "PNL\EMSL-Prism.Users.DMS_User":Read
		
		cacls L:\MTD_Peak_Matching /E /G PNL\mtsproc:C



Install Sql Server 2008 R2
	Login to ProteinSeqs3 as user MTSAdmin 
	Login to Gigasax3 as user MEMAdmin
	- see below for detailed installation

Install Sql Server 2008 R2 SP1

Disable Animations in Sql Server Management Studio
		From https://connect.microsoft.com/SQLServer/feedback/ViewFeedback.aspx?FeedbackID=125771
		
		Start the Registry Editor
		Go to HKEY_CURRENT_USER\Software\Microsoft\Microsoft SQL Server\100\Tools\Shell\General
		Change the Animations key from 00000001 to 00000000


Configure the Windows Firewall with Advanced Security to open the necessary ports
	Run these three commands at the command prompt (start command prompt as an Administrator)
		NOTE: Using "profile = any" so that these ports are open for bionet on Gigasax
		netsh advfirewall firewall add rule name = SQLPort dir = in protocol = tcp action = allow localport = 1433 remoteip = any profile = any
		netsh advfirewall firewall add rule name = SQLBrowser dir = in protocol = udp action = allow localport = 1434 remoteip = any profile = any
		netsh advfirewall firewall add rule name = SQLTSqlDebug dir = in protocol = tcp action = allow localport = 135 remoteip = any profile = any

		NOTE: Also need to open the NTP port on Gigasax so that bionet computers can synchronize their system clocs using w32tm
		netsh advfirewall firewall add rule name = W32Time dir = in protocol = udp action = allow localport = 123 remoteip = any profile = any

		Note: the other option is to open the ports only on the domain profile and only on 192.168.30.68, like this:
			netsh advfirewall firewall add rule name = SQLPort dir = in protocol = tcp action = allow localport = 1433 remoteip = any profile = DOMAIN
			netsh advfirewall firewall add rule name = SQLBrowser dir = in protocol = udp action = allow localport = 1434 remoteip = any profile = DOMAIN
			netsh advfirewall firewall add rule name = SQLTSqlDebug dir = in protocol = tcp action = allow localport = 135 remoteip = any profile = DOMAIN
	
			netsh advfirewall firewall add rule name = SQLPort_Bionet dir = in protocol = tcp action = allow localport = 1433 LocalIP = 192.168.30.68/32 remoteip = any profile = PUBLIC
			netsh advfirewall firewall add rule name = SQLBrowser_Bionet dir = in protocol = tcp action = allow localport = 1434 LocalIP = 192.168.30.68/32 remoteip = any profile = PUBLIC
			netsh advfirewall firewall add rule name = SQLTSqlDebug_Bionet dir = in protocol = tcp action = allow localport = 135 LocalIP = 192.168.30.68/32 remoteip = any profile = PUBLIC

	Next, go into Windows Firewall with Advanced Security (Start->Control Panel->Administrative tools)
	Now edit SQLTSqlDebug and SQLTSqlDebug_Bionet to only apply to program: C:\Program Files\Microsoft SQL Server\MSSQL10_50.MSSQLSERVER\MSSQL\Binn\sqlservr.exe


Install RedGate Backup


Configure IIS
	Choose Start, Administrative Tools, Internet Information Services (IIS) Manager
	In the Connections menu, expand the server name (ProteinSeqs3), then Sites, then Default Web Site
	In the Default Web Site Home view, configure Authentication
		Enable Digest Authentication (click "Enable" in the Actions section at the right)
		Enable Windows Authentication

	Update C:\inetpub\wwwroot 

	== Proteinseqs3 ==

		File default.htm has the usual "This computer is a Federal computer system and is the property of the United States Government ..." message plus:
	      <H2 align=center>MTS</H2>
	      <P>ProteinSeqs is part of the mass and time tag system (MTS); please see <a href="http://pogo/">Pogo</a> or <A href="javascript:history.go(-1)">return</A> to the previous page.

	== Gigasax3 ==
		File default.htm has the usual "This computer is a Federal computer system and is the property of the United States Government ..." message plus:
	
	     <h2 align=center>NOTICE TO DMS USERS</h2>
	      <p>Gigasax is part DMS. Relevant websites are:</p>
	      <ul>
	      <li><a href="http://dms2.pnl.gov/">DMS</a> (if you are in an instrument lab, follow this link <a href="http://dms2.bionet/">http://dms2.bionet/</a>)</li>
	      <li><a href="http://prismwiki.pnl.gov/">PrismWiki</a></li>
	      <li><a href="http://pogo/index.html">MTS Links</a></li>
	      <li><a href="https://jira.pnnl.gov/jira/secure/CreateIssue.jspa?pid=10900&issuetype=7&Create=Create">Proteomics Support Queue submission form</a></li>
	      <li><a href="http://proteomics.emsl.pnl.gov/">EMSL Proteomics Facility</a></li>
	      </ul>


 
	== Virtual Directories on Proteinseqs3 ==
		In the Default Web Site, Add a new virtual directory named "pm" and pointing to L:\MTD_Peak_Matching
			Use "Pass-through" Authentication (the default); confirm using "Connect as ..."
			When you click "Test Settings", it is normal to see error "Cannot verify access to path"
			Configure the "pm" virtual Directory:
				Expand it in the tree; you'll see "pm Home"
				Select Directory Browsing and choose "Enable"
		Confirm that http://proteinseqs3/pm/results/index.html is accessible

	== Virtual Directories on Gigasax3 ==

		In the Default Web Site, Add a new virtual directory named "pm" and pointing to L:\MTD_Peak_Matching
			Use "Pass-through" Authentication (the default); confirm using "Connect as ..."
			When you click "Test Settings", it is normal to see error "Cannot verify access to path"
			Configure the "pm" virtual Directory:
				Expand it in the tree; you'll see "pm Home"
				Select Directory Browsing and choose "Enable"
		Confirm that http://gigasax3/DMS_Inst_Source/ is accessible and browsable


Configure Gigasax to be a time server
	
	Start an administrative level command prompt and run these commands:
	   W32tm /config /reliable:yes
	   W32tm /config /update
	   W32tm /resync
	
	Start the Registry editor and confirm that these settings are defined
	   [HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\W32Time\Config]
	   "AnnounceFlags"=dword:00000005
	   [HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\W32Time\Parameters]
	   "Type"="Nt5DS"
	   [HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\W32Time\TimeProviders\NtpServer]
	   "Enabled"=dword:00000001
	
	Stop then restart the time service
	   Net stop w32time
	   Net start w32time
	   Net time
		
	Confirm things are working using the "w32tm /stripchart" command on another computer:
		w32tm /stripchart /computer:gigasax
	



---------------------------------------------------------------------------------
-- Use the following steps to install SQL Server 2008 from scratch
---------------------------------------------------------------------------------


Step 1) Configure the server drives
	Preferred drive configuration for Gigasax3:
	
		Drive		Name		Description
		C: drive	System      RAID 1  (mirror) using 2 disks; format with  4 KB sectors
		E: drive	ParamFiles  RAID 1  (mirror) using 2 disks; format with  4 KB sectors
		G: drive	SQLLogs     RAID 1  (mirror) using 2 disks; format with 64 KB sectors
		H: drive	SQLData1    RAID 1  (mirror) using 2 disks; format with 64 KB sectors
		I: drive	SQLData2    RAID 1  (mirror) using 2 disks; format with 64 KB sectors


	Preferred drive configuration for ProteinSeqs3:
	
		Drive		Name		Description
		C: drive	System      RAID 1  (mirror) using 2 disks; format with  4 KB sectors
		E: drive	SQLTempDB   RAID 1  (mirror) using 2 disks; format with 64 KB sectors
		H: drive	SQLLogs     RAID 1  (mirror) using 2 disks; format with 64 KB sectors
		I: drive	SQLData     RAID 10 (hybrid) using 8 disks; format with 64 KB sectors
		L: drive	PMData      RAID 1  (mirror) using 2 disks; format with  4 KB sectors

		The E:, H:, and I: should have a 64 KB cluster size
		The C: drive (and any additional drives) need 4 KB cluster size (Windows' default)

	Note that Windows 2008 server automatically partition aligns new partitions, thus partition alignment is not required.

Step 2) Create the standard folders
	Proteinseqs3:
		I:\SQLServerData
		H:\SQLServerData
	
		E:\SQLServerData
		E:\Redgate_Backup_Xfer
	
		E:\GA_Net_Xfer
		E:\Peptide_Prophet_Xfer
	
		L:\MTD_Peak_Matching
		L:\SQLServerBackup

		Share these folders:
	
			\\ProteinSeqs3\MTD_Peak_Matching\
				Configure share permissions for:
					ProteinSeqs3\Administrators; PNL\EMSL-Prism.MTS.MTS_DB_Dev; PNL\EMSL-Prism.MTS.MTS_DB_Lite; PNL\EMSL-Prism.MTS.MTS_DB_Reader; PNL\mtsproc; PNL\EMSL-Prism.Users.DMS_User
					Grant Change to MTSProc and Administrators; Read to the others
					Explicitly add MTSProc to the Security tab with Change Permission
	
			\\ProteinSeqs3\Peptide_Prophet_Xfer\
				Configure share permissions for:
					ProteinSeqs3\Administrators; PNL\EMSL-Prism.MTS.MTS_DB_Dev; PNL\EMSL-Prism.MTS.MTS_DB_Lite; PNL\EMSL-Prism.MTS.MTS_DB_Reader; PNL\mtsproc; PNL\EMSL-Prism.Users.DMS_User
					Grant Change to MTSProc and Administrators; Read to the others
					Explicitly add MTSProc to the Security tab with Change Permission
	
			\\ProteinSeqs3\GA_Net_Xfer\
				Configure share permissions for:
					ProteinSeqs3\Administrators; PNL\EMSL-Prism.MTS.MTS_DB_Dev; PNL\EMSL-Prism.MTS.MTS_DB_Lite; PNL\EMSL-Prism.MTS.MTS_DB_Reader; PNL\mtsproc; PNL\EMSL-Prism.Users.DMS_User
					Grant Change to MTSProc, MTS_DB_Dev, and Administrators; Read to the others
					Explicitly add MTSProc and MTS_DB_Dev to the Security tab with Change Permission
	
Step 3) Install Sql Server
	Use setup.exe from the Sql Server 2008 R2 (64 bit) DVD
	Under Installation, choose "New installation or add features to an existing installation"
	The product Key is pre-pidded: K8TCY-WY3TW-H2BCG-WTYV2-C96HM
	Accept the license terms, then install the Setup Support Files
	On the Setup Role screen, choose "SQL Server Feature Installation"
	On Feature Selection, choose:
		"Database Engine Services"
		"Sql Server Replication"
		"Client Tools Connectivity"
		"SQL Server Books Online"
		"Management Tools - Basic"
			"Management Tools - Complete"
	Target folders:
		C:\Program Files\Microsoft SQL Server\
		C:\Program Files (x86)\Microsoft SQL Server\
	Instance configuration
		Default Instance
		Instance ID: MSSQLServer
		Folder: C:\Program Files\Microsoft SQL Server\
	Service Account configuration for MTS
		SQL Server Agent        PNL\mtsadmin	EnterPassword	Startup Automatic
		SQL Server DB Engine    PNL\mtsadmin	EnterPassword	Startup Automatic
		SQL Server Browser                NT AUTHORITY\NetworkService  NoPassword   Startup Automatic

	Service Account configuration for Gigasax
		SQL Server Agent        PNL\msdadmin	EnterPassword	Startup Automatic
		SQL Server DB Engine    PNL\msdadmin	EnterPassword	Startup Automatic
		SQL Server Browser                NT AUTHORITY\NetworkService  NoPassword   Startup Automatic
	Use default Collation options
		SQL_Latin1_General_CP1_CI_AS
	Account Provisioning tab
		Configure for mixed-mode authentication
			Enter a password for the SQL Server Administrator account
			Administrative account users for ProteinSeqs3:
				MTSAdmin; D3L243; ^RBAC EMSL-Prism.MTS.MTS_Sys_Admin; DMS Admins

			Administrative account users for Gigasax:
				MSDAdmin; MEMAdmin; D3L243; DMS Admins

	Data Directories tab for Gigasax (see below if you forget to do this)
		Data root directory       C:\Program Files\Microsoft SQL Server\
		User DB directory         I:\SQLServerData
		User DB log directory     G:\SQLServerData
		Temp DB directory         C:\SqlServerData
		Temp DB log directory     E:\SqlServerData
		Backup directory          G:\SqlServerBackup

	Data Directories tab for ProteinSeqs3 (see below if you forget to do this)
		Data root directory       C:\Program Files\Microsoft SQL Server\
		User DB directory         I:\SQLServerData
		User DB log directory     H:\SQLServerData
		Temp DB directory         E:\SQLServerData
		Temp DB log directory     C:\SQLServerData         (change to L:\SQLServerData after adding another drive and creating a RAID-1 array for the L: drive)
		Backup directory          L:\SQLServerBackup

	FileStream Tab
		Leave the filestream option unchecked
	Click Next several times to verify the installation options, then click Install


	If you forgot  to set the data directories during setup, use the following to fix things:

		To update teh Temp DB directories, run the following SQL in SSMS:
			USE master
			go
			ALTER DATABASE tempdb MODIFY FILE (NAME = tempdev, FILENAME = 'E:\SqlServerData\tempdb.mdf')
			go
			ALTER DATABASE tempdb MODIFY FILE (NAME = templog, FILENAME = 'C:\SqlServerData\templog.ldf')
			go 
		
	To change the Backup directory, start SSMS, connect to the server, right click the server name and choose Facets
		- Now you can change the Backup Directory, default data file directory, and default log file directory


Step 4) Configure services
	Start Computer Management
	Set SQL Server to                      Automatic	PNL\MTSAdmin   on Proteinseqs3  (PNL\MSDAdmin on Gigasax3)
	Set SQL Server Agent to                Automatic	PNL\MTSAdmin   on Proteinseqs3  (PNL\MSDAdmin on Gigasax3)
	Set SQL Server Analysis Services to    Manual                         (not installed)
	Set SQL Server Browser to              Automatic	Local Service
	Set SQL Server Integration Services to Automatic	Network Service   (not installed)
	Set SQL Server VSS Writer to           Automatic	Local System

Step 5) Do not Configure AWE, since this is only required for 32-bit systems

Step 6) Configure Sql Server Server Properties (right click Server Name and choose Properties)
	Configure memory to minimum 1024 MB and maximum ~1 GB less than total Physical ram (set to 31000 MB on ProteinSeqs3 and Gigasax3)
	Security should show mixed mode login (Sql Server and Windows Authentication); audit Failed Logins Only
	Enable the proxy account on both Gigasax3 and Proteinseqs3 (used for xp_cmdshell)
		Username: PNL\MTSProc
	Connections tab: Check "Allow remote connections to this server" and increase remote query timeout to 3600 seconds
	Database settings tab: Default locations are I:\SQLServerData for Data and H:\SQLServerData for logs

Step 7) Install Sql Server 2008 SP1

Step 8) Configure the Windows Firewall with Advanced Security to open the necessary ports
	Run these three commands at the command prompt (start command prompt as an Administrator)
		netsh advfirewall firewall add rule name = SQLPort dir = in protocol = tcp action = allow localport = 1433 remoteip = any profile = DOMAIN
		netsh advfirewall firewall add rule name = SQLBrowser dir = in protocol = udp action = allow localport = 1434 remoteip = any profile = DOMAIN
		netsh advfirewall firewall add rule name = SQLTSqlDebug dir = in protocol = tcp action = allow localport = 135 remoteip = any profile = DOMAIN

		NOTE: Also need to open these ports on the Public firewall on Gigasax so that Sql Server will be visible from Bionet
		netsh advfirewall firewall add rule name = SQLPort_Bionet dir = in protocol = tcp action = allow localport = 1433 LocalIP = 192.168.30.68/32 remoteip = any profile = PUBLIC
		netsh advfirewall firewall add rule name = SQLBrowser_Bionet dir = in protocol = tcp action = allow localport = 1434 LocalIP = 192.168.30.68/32 remoteip = any profile = PUBLIC
		netsh advfirewall firewall add rule name = SQLTSqlDebug_Bionet dir = in protocol = tcp action = allow localport = 135 LocalIP = 192.168.30.68/32 remoteip = any profile = PUBLIC

	Next, go into Windows Firewall with Advanced Security (Start->Control Panel->Administrative tools)
	Now edit SQLTSqlDebug and SQLTSqlDebug_Bionet to only apply to program: C:\Program Files\Microsoft SQL Server\MSSQL10_50.MSSQLSERVER\MSSQL\Binn\sqlservr.exe

Step 9a) Detach the key databases from the old server, copy the .MDF and .LDF files, then re-attach
		
		USE [master]
		GO
		CREATE DATABASE [DMS5] ON 
		( FILENAME = N'I:\SQLServerData\DMS5.mdf' ),
		( FILENAME = N'H:\SQLServerData\DMS5_log.ldf' )
		 FOR ATTACH
		GO
		CREATE DATABASE [DMS_Capture] ON 
		( FILENAME = N'I:\SQLServerData\DMS_Capture.mdf' ),
		( FILENAME = N'H:\SQLServerData\DMS_Capture_log.ldf' )
		 FOR ATTACH
		GO
		CREATE DATABASE [DMS_Capture_T3] ON 
		( FILENAME = N'I:\SQLServerData\DMS_Capture_T3.mdf' ),
		( FILENAME = N'H:\SQLServerData\DMS_Capture_T3_log.ldf' )
		 FOR ATTACH
		GO
		CREATE DATABASE [DMS_Data_Package] ON 
		( FILENAME = N'I:\SQLServerData\DMS_Data_Package.mdf' ),
		( FILENAME = N'H:\SQLServerData\DMS_Data_Package_log.ldf' )
		 FOR ATTACH
		GO
		CREATE DATABASE [DMS_Data_Package_Beta] ON 
		( FILENAME = N'I:\SQLServerData\DMS_Data_Package_Beta.mdf' ),
		( FILENAME = N'H:\SQLServerData\DMS_Data_Package_Beta_log.ldf' )
		 FOR ATTACH
		GO
		CREATE DATABASE [DMS_Data_Package_T3] ON 
		( FILENAME = N'I:\SQLServerData\DMS_Data_Package_T3.mdf' ),
		( FILENAME = N'H:\SQLServerData\DMS_Data_Package_T3_log.ldf' )
		 FOR ATTACH
		GO
		CREATE DATABASE [DMS_Pipeline] ON 
		( FILENAME = N'I:\SQLServerData\DMS_Pipeline.mdf' ),
		( FILENAME = N'H:\SQLServerData\DMS_Pipeline_log.ldf' )
		 FOR ATTACH
		GO
		CREATE DATABASE [DMS_Pipeline_T3] ON 
		( FILENAME = N'I:\SQLServerData\DMS_Pipeline_T3.mdf' ),
		( FILENAME = N'H:\SQLServerData\DMS_Pipeline_T3_log.ldf' )
		 FOR ATTACH
		GO
		CREATE DATABASE [DMS_Pipeline_Test] ON 
		( FILENAME = N'I:\SQLServerData\DMS_Pipeline_Test.mdf' ),
		( FILENAME = N'H:\SQLServerData\DMS_Pipeline_Test_log.ldf' )
		 FOR ATTACH
		GO
		CREATE DATABASE [DMS5_Beta] ON 
		( FILENAME = N'I:\SQLServerData\DMS5_Beta.mdf' ),
		( FILENAME = N'H:\SQLServerData\DMS5_Beta_log.ldf' )
		 FOR ATTACH
		GO
		CREATE DATABASE [DMS5_T3] ON 
		( FILENAME = N'I:\SQLServerData\DMS5_T3.mdf' ),
		( FILENAME = N'H:\SQLServerData\DMS5_T3_log.ldf' )
		 FOR ATTACH
		GO

Step 9b) Configure the databases to compress backups when using Sql Server's built-in backup
		
		use DMS_Capture
		EXEC sp_configure 'backup compression default', 1 ;
		RECONFIGURE WITH OVERRIDE ;
		go
		
		use DMS_Capture_T3
		EXEC sp_configure 'backup compression default', 1 ;
		RECONFIGURE WITH OVERRIDE ;
		go
		
		use DMS_Pipeline
		EXEC sp_configure 'backup compression default', 1 ;
		RECONFIGURE WITH OVERRIDE ;
		go
		
		use DMS_Pipeline_T3
		EXEC sp_configure 'backup compression default', 1 ;
		RECONFIGURE WITH OVERRIDE ;
		go
		
		use DMS_Pipeline_Test
		EXEC sp_configure 'backup compression default', 1 ;
		RECONFIGURE WITH OVERRIDE ;
		go
		
		use DMS5
		EXEC sp_configure 'backup compression default', 1 ;
		RECONFIGURE WITH OVERRIDE ;
		go
		
		use DMS5_T3
		EXEC sp_configure 'backup compression default', 1 ;
		RECONFIGURE WITH OVERRIDE ;
		go
		
		use DMS5_Beta
		EXEC sp_configure 'backup compression default', 1 ;
		RECONFIGURE WITH OVERRIDE ;
		go
		
		use DMSHistoricLog
		EXEC sp_configure 'backup compression default', 1 ;
		RECONFIGURE WITH OVERRIDE ;
		go
		
		use DMSHistoricLogCapture
		EXEC sp_configure 'backup compression default', 1 ;
		RECONFIGURE WITH OVERRIDE ;
		go
		
		use DMSHistoricLogPipeline
		EXEC sp_configure 'backup compression default', 1 ;
		RECONFIGURE WITH OVERRIDE ;
		go
		



Step 10) Configure Windows users and groups
	== ProteinSeqs3 ==
		Administrators
			emslmgr
			PNL\DMS Admins
			PNL\Domain Admins
			PNL\EMSL WinServer Administration Accounts
			^RBAC EMSL-Prism.MTS.MTS_Sys_Admin
			MEMAdmin
			MTSAdmin
			PNL\SPG-ServerAdmins
			PNL\D3L243
	
		MTS_DB_Dev
			PNL\EMSL-Prism.MTS.MTS_DB_Dev
	
		MTS_DB_Lite
			PNL\EMSL-Prism.MTS.MTS_DB_Lite
	
		MTS_DB_Reader
			PNL\EMSL-Prism.MTS.MTS_DB_Reader

		ProteinSeqs_Upload_Users
			"^RBAC EMSL-Prism.Users.DMS ProteinSeqs Upload Users"
			^RBAC EMSL-Prism.Users.Web_Analysis

	== Gigasax3 ==
		Administrators
			PNL\DMS Admins
			PNL\Domain Admins
			PNL\EMSL WinServer Administration Accounts
			MEMAdmin
			PNL\SPG-ServerAdmins
		

Step 11) Rename the server from ProteinSeqs3 to ProteinSeqs (see note in step 12)
         Rename the server from Gigasax3 to Gigasax (see note in step 12)

Step 12) Configure Sql Server logins
		Note: When configuring Pogo2, I originally made the logins for Pogo2\MTS_DB_Reader, Pogo2\MTS_DB_Lite, and Pogo2\MTS_DB_Dev
		      but after we renamed the server, the text "Pogo2" didn't auto change to "Pogo", so I had to drop and re-add the users
			  Thus, it is best to rename the server before this step.

	== Gigasax ==

		-- DMSReader is used by numerous applications
		-- DMSWebUser is used by the DMS2 website
		-- nwfs_samba_user is used by node a2.emsl.pnl.gov, which queryies DMS5.dbo.V_Users_NWFS_Samba		
		CREATE LOGIN [DMSReader] WITH PASSWORD=N'dms4fun', DEFAULT_DATABASE=[DMS5], DEFAULT_LANGUAGE=[us_english], CHECK_EXPIRATION=OFF, CHECK_POLICY=OFF
		CREATE LOGIN [DMSWebUser] WITH PASSWORD=N'icr4fun', DEFAULT_DATABASE=[master], DEFAULT_LANGUAGE=[us_english], CHECK_EXPIRATION=OFF, CHECK_POLICY=OFF
		CREATE LOGIN [nwfs_samba_user] WITH PASSWORD=N'nwfs4real', DEFAULT_DATABASE=[DMS5], DEFAULT_LANGUAGE=[us_english], CHECK_EXPIRATION=OFF, CHECK_POLICY=OFF
		CREATE LOGIN [LCMSNetUser] WITH PASSWORD=N'Nosoup4u', DEFAULT_DATABASE=[DMS5], DEFAULT_LANGUAGE=[us_english], CHECK_EXPIRATION=OFF, CHECK_POLICY=OFF
		GO
		
		CREATE LOGIN [GIGASAX\ftms] FROM WINDOWS WITH DEFAULT_DATABASE=[DMS5], DEFAULT_LANGUAGE=[us_english]
		CREATE LOGIN [GIGASAX\LCMSOperator] FROM WINDOWS WITH DEFAULT_DATABASE=[DMS5], DEFAULT_LANGUAGE=[us_english]
		GO
	
		CREATE LOGIN [pnl\D3J410] FROM WINDOWS WITH DEFAULT_DATABASE=[master], DEFAULT_LANGUAGE=[us_english]
		CREATE LOGIN [pnl\D3L243] FROM WINDOWS WITH DEFAULT_DATABASE=[master], DEFAULT_LANGUAGE=[us_english]
		CREATE LOGIN [PNL\D3M578] FROM WINDOWS WITH DEFAULT_DATABASE=[DMS5], DEFAULT_LANGUAGE=[us_english]
		CREATE LOGIN [PNL\D3M580] FROM WINDOWS WITH DEFAULT_DATABASE=[DMS5], DEFAULT_LANGUAGE=[us_english]
		CREATE LOGIN [PNL\D3Y513] FROM WINDOWS WITH DEFAULT_DATABASE=[master], DEFAULT_LANGUAGE=[us_english]
		CREATE LOGIN [PNL\DMS Admins] FROM WINDOWS WITH DEFAULT_DATABASE=[master], DEFAULT_LANGUAGE=[us_english]
		CREATE LOGIN [PNL\EMSL-Prism.Users.Developers] FROM WINDOWS WITH DEFAULT_DATABASE=[DMS5_T3], DEFAULT_LANGUAGE=[us_english]
		CREATE LOGIN [PNL\EMSL-Prism.Users.DMS_Guest] FROM WINDOWS WITH DEFAULT_DATABASE=[master], DEFAULT_LANGUAGE=[us_english]
		CREATE LOGIN [PNL\EMSL-Prism.Users.DMS_User] FROM WINDOWS WITH DEFAULT_DATABASE=[master], DEFAULT_LANGUAGE=[us_english]
		CREATE LOGIN [PNL\EMSL-Prism.Users.Param_File_Admin] FROM WINDOWS WITH DEFAULT_DATABASE=[master], DEFAULT_LANGUAGE=[us_english]
		CREATE LOGIN [PNL\EMSL-Prism.Users.Web_Analysis] FROM WINDOWS WITH DEFAULT_DATABASE=[master], DEFAULT_LANGUAGE=[us_english]
		CREATE LOGIN [PNL\memadmin] FROM WINDOWS WITH DEFAULT_DATABASE=[master], DEFAULT_LANGUAGE=[us_english]
		CREATE LOGIN [PNL\svc-dms] FROM WINDOWS WITH DEFAULT_DATABASE=[DMS_Pipeline], DEFAULT_LANGUAGE=[us_english]
	
		ALTER LOGIN [DMSReader] ENABLE
		ALTER LOGIN [DMSWebUser] ENABLE
		ALTER LOGIN [nwfs_samba_user] ENABLE
		ALTER LOGIN [LCMSNetUser] ENABLE
		GO

		-- Each of the new logins should automatically get a Server Role of: Public	
		-- Associate users with Server Roles

		EXEC master..sp_addsrvrolemember @loginame = N'pnl\D3J410', @rolename = N'sysadmin'
		EXEC master..sp_addsrvrolemember @loginame = N'pnl\D3L243', @rolename = N'sysadmin'
		EXEC master..sp_addsrvrolemember @loginame = N'pnl\DMS Admins', @rolename = N'sysadmin'
		EXEC master..sp_addsrvrolemember @loginame = N'pnl\memadmin', @rolename = N'sysadmin'


	== ProteinSeqs ==
		-- Create mtuser, mtadmin, MTS_DB_Reader, MTS_DB_Lite, and MTS_DB_Dev
	
		CREATE LOGIN [DMSReader] WITH PASSWORD=N'dms4fun', DEFAULT_DATABASE=[master], DEFAULT_LANGUAGE=[us_english], CHECK_EXPIRATION=OFF, CHECK_POLICY=OFF
		CREATE LOGIN [DMSWebUser] WITH PASSWORD=N'icr4fun', DEFAULT_DATABASE=[master], DEFAULT_LANGUAGE=[us_english], CHECK_EXPIRATION=OFF, CHECK_POLICY=OFF

		CREATE LOGIN [mtuser] WITH PASSWORD=N'mt4fun', DEFAULT_DATABASE=[PRISM_IFC], DEFAULT_LANGUAGE=[us_english], CHECK_EXPIRATION=OFF, CHECK_POLICY=OFF
		CREATE LOGIN [mtadmin] WITH PASSWORD=N'mt4real', DEFAULT_DATABASE=[master], DEFAULT_LANGUAGE=[us_english], CHECK_EXPIRATION=OFF, CHECK_POLICY=OFF
		GO
		CREATE LOGIN [ProteinSeqs\MTS_DB_Reader] FROM WINDOWS WITH DEFAULT_DATABASE=[MT_Main], DEFAULT_LANGUAGE=[us_english]
		CREATE LOGIN [ProteinSeqs\MTS_DB_Lite] FROM WINDOWS WITH DEFAULT_DATABASE=[master], DEFAULT_LANGUAGE=[us_english]
		CREATE LOGIN [ProteinSeqs\MTS_DB_Dev] FROM WINDOWS WITH DEFAULT_DATABASE=[master], DEFAULT_LANGUAGE=[us_english]
		CREATE LOGIN [ProteinSeqs\ProteinSeqs_Upload_Users] FROM WINDOWS WITH DEFAULT_DATABASE=[master], DEFAULT_LANGUAGE=[us_english]
	
		CREATE LOGIN [PNL\DMS Admins] FROM WINDOWS WITH DEFAULT_DATABASE=[master], DEFAULT_LANGUAGE=[us_english]
		CREATE LOGIN [PNL\EMSL-Prism.Users.DMS_Guest] FROM WINDOWS WITH DEFAULT_DATABASE=[master], DEFAULT_LANGUAGE=[us_english]
		CREATE LOGIN [PNL\EMSL-Prism.Users.DMS_MgrConfig_Admin] FROM WINDOWS WITH DEFAULT_DATABASE=[master], DEFAULT_LANGUAGE=[us_english]
		CREATE LOGIN [PNL\EMSL-Prism.Users.DMS_User] FROM WINDOWS WITH DEFAULT_DATABASE=[master], DEFAULT_LANGUAGE=[us_english]
		CREATE LOGIN [PNL\EMSL-Prism.Users.Web_Analysis] FROM WINDOWS WITH DEFAULT_DATABASE=[master], DEFAULT_LANGUAGE=[us_english]
		CREATE LOGIN [PNL\svc-dms] FROM WINDOWS WITH DEFAULT_DATABASE=[master], DEFAULT_LANGUAGE=[us_english]

		go
		ALTER LOGIN [DMSReader] ENABLE
		ALTER LOGIN [DMSWebUser] ENABLE
		ALTER LOGIN [mtuser] ENABLE
		ALTER LOGIN [mtadmin] ENABLE
		go
		
		-- Set the Server Role for MTS_DB_Dev to: bulkadmin, dbcreator, diskadmin, public, securityadmin, and setupadmin
		-- Set the Server Role for MTS_DB_Lite to: bulkadmin and public
		-- Set the Server Role for MTS_DB_Reader to: public
	
		EXEC master..sp_addsrvrolemember @loginame = N'ProteinSeqs\MTS_DB_Dev', @rolename = N'bulkadmin'
		EXEC master..sp_addsrvrolemember @loginame = N'ProteinSeqs\MTS_DB_Dev', @rolename = N'dbcreator'
		EXEC master..sp_addsrvrolemember @loginame = N'ProteinSeqs\MTS_DB_Dev', @rolename = N'diskadmin'
		EXEC master..sp_addsrvrolemember @loginame = N'ProteinSeqs\MTS_DB_Dev', @rolename = N'securityadmin'
		EXEC master..sp_addsrvrolemember @loginame = N'ProteinSeqs\MTS_DB_Dev', @rolename = N'setupadmin'
	
		EXEC master..sp_addsrvrolemember @loginame = N'ProteinSeqs\MTS_DB_Lite', @rolename = N'bulkadmin'
			
		-- Each of the new logins should automatically get a Server Role of: Public	
		-- Associate users with Server Roles
		EXEC master..sp_addsrvrolemember @loginame = N'PNL\D3L243', @rolename = N'sysadmin'
		EXEC master..sp_addsrvrolemember @loginame = N'PNL\DMS Admins', @rolename = N'sysadmin'
		EXEC master..sp_addsrvrolemember @loginame = N'PNL\EMSL-Prism.MTS.MTS_Sys_Admin', @rolename = N'sysadmin'


Step 13) Possibly fix sys.servers
	If Sql Server was intalled when the computer had a temporary name, you must fix sys.servers to have the correct name:
		sp_dropserver Gigasax3
		go
		sp_addserver Gigasax, local
		go
	Next, stop then restart Sql Server

Step 14)
	== Gigasax ==
		Remove/Re-add permissions in each DMS DB
		
		For each DB, call this stored procedure:
			EXEC DMS_Capture.dbo.UpdateUserPermissions
			EXEC DMS_Capture_T3.dbo.UpdateUserPermissions
			EXEC DMS_Data_Package.dbo.UpdateUserPermissions
			EXEC DMS_Data_Package_Beta.dbo.UpdateUserPermissions
			EXEC DMS_Data_Package_T3.dbo.UpdateUserPermissions
			EXEC DMS_Pipeline.dbo.UpdateUserPermissions
			EXEC DMS_Pipeline_T3.dbo.UpdateUserPermissions
			EXEC DMS_Pipeline_Test.dbo.UpdateUserPermissions
			EXEC DMS5.dbo.UpdateUserPermissions
			EXEC DMS5_Beta.dbo.UpdateUserPermissions
			EXEC DMS5_T3.dbo.UpdateUserPermissions

		Confirm access by connecting to Gigasax as DMSReader and then DMSWebUser and running these queries:
			select top 10 * from dms_capture.dbo.t_log_entries
			select top 10 * from dms5.dbo.t_log_entries
			select top 10 * from dms_pipeline.dbo.t_log_entries
			select top 10 * from dms_data_package.dbo.t_log_entries

	== ProteinSeqs ==
		Remove/Re-add permissions on MT_Main and PRISM_IFC (On Pogo, also update MTS_Master and PRISM_RPT)
		For each DB, call this stored procedure:
			EXEC MT_Main.dbo.UpdateUserPermissions
			EXEC PRISM_IFC.dbo.UpdateUserPermissions
			EXEC Manager_Control.dbo.UpdateUserPermissions
			EXEC Manager_Control_T3.dbo.UpdateUserPermissions
			EXEC MT_HistoricLog.dbo.UpdateUserPermissions
			EXEC MT_Main.dbo.UpdateUserPermissions
			EXEC Prism_IFC.dbo.UpdateUserPermissions
			EXEC Protein_Sequences.dbo.UpdateUserPermissions


Step 15) Add the linked servers; use MTUser for the linking; see below for T-Sql to add the servers
	Albert
	Daffy
	Elmer
	Pogo
	Porky
	ProteinSeqs   (on Gigasax)
	ProteinSeqs2
	Roadrunner
	Gigasax	  (on ProteinSeqs)

	EXEC sp_addlinkedserver 'SQLSRVPROD02', '', 'SQLNCLI', 'SQLSRVPROD02,915'
	EXEC sp_addlinkedsrvlogin 'SQLSRVPROD02', 'FALSE', NULL, 'PRISM', '5GigYawn'

	Confirm the linked servers are working:
	select top 10 * from Albert.mt_main.dbo.t_log_entries
	select top 10 * from Daffy.mt_main.dbo.t_log_entries
	select top 10 * from Elmer.mt_main.dbo.t_log_entries
	select top 10 * from Pogo.mt_main.dbo.t_log_entries
	select top 10 * from Porky.mt_main.dbo.t_log_entries
	select top 10 * from ProteinSeqs.mt_main.dbo.t_log_entries
	select top 10 * from ProteinSeqs2.mt_main.dbo.t_log_entries
	select top 10 * from Roadrunner.mt_main.dbo.t_log_entries
	select top 10 * from Gigasax.dms5.dbo.t_log_entries
	
	select top 50 'H' + HANFORD_ID AS U_HID, Last_Name, First_Name from SQLSRVPROD02.opwhse.dbo.VW_PUB_BMI_EMPLOYEE where name like 'monroe%'
	select top 50 'H' + HANFORD_ID AS U_HID, Last_Name, First_Name from SQLSRVPROD02.opwhse.dbo.vw_pub_pnnl_associate


Step 15b) On Gigasax3, setup a system-wide DSN to allow for communication with EUS

	This procedure is described at http://prismwiki.pnl.gov/wiki/DMS_Database_and_Website_Operations_Guide
	See also http://www.ideaexcursion.com/2009/02/25/howto-setup-sql-server-linked-server-to-mysql/

	a) Download and install the 64-bit MySql ODBC driver, from http://dev.mysql.com/downloads/connector/odbc/
		For example, mysql-connector-odbc-5.1.11-winx64.msi
	b) Click Start, Control Panel, Administrative Tools, Data Sources (ODBC)
	c) Choose the System DSN tab, then click Add
	d) Choose MySql ODBC 5.1 driver
	e) Click Finish
	f) Enter the connection details, then click OK
		Data Source Name	 EUS
		Description	 EMSL User System
		TCP/IP Server	 eusi.emsl.pnl.gov
		Port	 3306
		User	 dmsreader
		Pwd	 aVJqhst4 (decode this with PasswordUpdateTool)
		Database	 Proteomics

	g) Update the properties for the MSDASQL provicer
		In SSMS, expand Gigasax3, Server Objects, Linked Servers, Providers
		Right click MSDASQL and choose Properties
		These four options should be checked:
			* Nested queries
			* Level zero only
			* Allow inprocess
			* Supports 'Like' Operator
		The remaining options should be unchecked

	h) Create a linked server for EUS
			
		USE [master]
		GO
		EXEC master.dbo.sp_addlinkedserver @server = N'EUS', @srvproduct=N'EUS', @provider=N'MSDASQL', @datasrc=N'EUS'
		
		GO
		EXEC master.dbo.sp_serveroption @server=N'EUS', @optname=N'collation compatible', @optvalue=N'false'
		EXEC master.dbo.sp_serveroption @server=N'EUS', @optname=N'data access', @optvalue=N'true'
		EXEC master.dbo.sp_serveroption @server=N'EUS', @optname=N'dist', @optvalue=N'false'
		EXEC master.dbo.sp_serveroption @server=N'EUS', @optname=N'pub', @optvalue=N'false'
		EXEC master.dbo.sp_serveroption @server=N'EUS', @optname=N'rpc', @optvalue=N'false'
		EXEC master.dbo.sp_serveroption @server=N'EUS', @optname=N'rpc out', @optvalue=N'false'
		EXEC master.dbo.sp_serveroption @server=N'EUS', @optname=N'sub', @optvalue=N'false'
		EXEC master.dbo.sp_serveroption @server=N'EUS', @optname=N'connect timeout', @optvalue=N'0'
		EXEC master.dbo.sp_serveroption @server=N'EUS', @optname=N'collation name', @optvalue=null
		EXEC master.dbo.sp_serveroption @server=N'EUS', @optname=N'lazy schema validation', @optvalue=N'false'
		EXEC master.dbo.sp_serveroption @server=N'EUS', @optname=N'query timeout', @optvalue=N'0'
		EXEC master.dbo.sp_serveroption @server=N'EUS', @optname=N'use remote collation', @optvalue=N'true'
		EXEC master.dbo.sp_serveroption @server=N'EUS', @optname=N'remote proc transaction promotion', @optvalue=N'true'
		GO
		USE [master]
		GO
		EXEC master.dbo.sp_addlinkedsrvlogin @rmtsrvname = N'EUS', @locallogin = NULL , @useself = N'False'
		GO
		

	i) Utilize this view from within SqlServer using openquery, for example:

		SELECT *
		FROM openquery (EUS, 'SELECT * FROM VW_PROPOSAL_PARTICIPANTS')

	j) Note that you may not be able to edit the connection with the GUI once it's created. Instead, use the registry, specifically, key HKEY_LOCAL_MACHINE\SOFTWARE\ODBC\ODBC.INI\EUS
		As explained at http://bugs.mysql.com/bug.php?id=56233 , this is not a bug; it is an issue with Windows 7 (and 2008 Server 64) because there are two versions of the ODBC data sources manager (32 bit and 64 bit). 
		To fix this:
		* Remove MySQL 64 bit driver (Programs - Remove) and Restart.
		* Download/Install the 64 bit MySQL ODBC driver with both 32/64 bit drivers.
		* Find all the copies of odbcad32.exe, there should be two on your box.
		* Use the 32-bit version of odbcad32.exe for 32-bit or the 64-bit version for 64-bit or just try both of them, one should work.
		* To manage a 32-bit driver, use c:\windows\sysWOW64\odbcad32.exe
		* To manage a 64-bit driver, use c:\windows\system32\odbcad32.exe

	k) Note that the following view in DMS5 wraps the openquery() command
			
		ALTER VIEW [dbo].[V_EUS_Import_Proposal_Participants]
		AS
		(
		SELECT PROPOSAL_ID,
		       PERSON_ID,
		       HANFORD_ID,
		       LAST_NAME,
		       FIRST_NAME,
		       LAST_NAME + ', ' + FIRST_NAME AS NAME_FM
		FROM openquery (EUS, 'SELECT * FROM VW_PROPOSAL_PARTICIPANTS')
		)


Step 16) Run the SQL Server Configuration Manager from the Start Menu
	Under SQL Server Services, sort by "Name", then configure:

		SQL Server (MSSQLSERVER)			Automatic	PNL\mtsadmin            (pnl\msdadmin on Gigasax)
		SQL Server Agent					Automatic	PNL\mtsadmin            (pnl\msdadmin on Gigasax)
		SQL Server Browser					Disabled	NT AUTHORITY\LOCAL SERVICE

		Other services likely not installed:
		  SQL Server Integration Services	Manual		NT AUTHORITY\NETWORK SERVICE
		  SQL Full-Text Search				Manual		LocalSystem
		  SQL Server Analysis Services		Manual		LocalSystem


		Under SQL Native Client 10.0 Configuration (32 bit)
			Client Protocols
				Shared Memory	1		Enabled
				TCP/IP			2		Enabled
				Named Pipes		3		Enabled
				VIA						Disabled
			Aliases
				<none>

		Under SQL Server Network Configuration
			Protocols
				Shared Memory	Enabled
				Named Pipes		Disabled
				TCP/IP			Enabled
				VIA				Disabled

	To change the Surface Area Configuration in Sql Server 2008 R2, use "Facets" in SQL Server Management Studio
		a. In Object explorer, right click the server name and then click Facets
			The Facets window may take 20 to 30 seconds to load
		b. Under Facet "Surface Area Configuration"
			AdHocRemoteQueriesEnabled	False		(set to True only if we use OPENROWSET to query another server; use of Linked Servers is preferred instead of OPENROWSET)
			ClrIntegrationEnabled		True		(This may or may not be in use on Gigasax; not sure)
			DatabaseMailEnabled			True		<-- Important to set this
			OleAutomationEnabled		True		<-- Important to set this
			RemoteDacEnabled			False
			ServiceBrokerEndpointActive	False
			SoapEndpointsEnabled		False
			SqlMailEnabled				False
			WebAssistantEnabled			n/a
			XPCmdShellEnabled			True		<-- Important to set this
		c. Click OK to apply the changes

Step 17a) Configure folder paths in MT_Main on ProteinSeqs
	Customize paths in T_Folder_Paths	
		
		 || Function || Client_Path || Server_Path ||
		 | Database Backup Log Path | L:\SqlServerBackup | L:\SqlServerBackup
		 | Database Backup Path | \\proto-1\db_Backups\ProteinSeqs_Backup\ | \\proto-1\DB_Backups\ProteinSeqs_Backup\
		 | Default Database Folder |  | I:\SqlServerData\
		 | Default Database Transaction Log Folder |  | H:\SqlServerData\
		 | GANET Transfer Root Folder | \\proteinseqs\GA_Net_Xfer\ | E:\GA_Net_Xfer\
		 | Peak Matching Parameters | \\albert\MTD_Peak_Matching\parameters\auto_ini_files\ | \\albert\MTD_Peak_Matching\parameters\auto_ini_files\
		 | Peak Matching Results | \\proteinseqs\MTD_Peak_Matching\results\ | C:\MTD_Peak_Matching\results
		 | Peak Matching Results Website | http://proteinseqs/pm/results/ | http://proteinseqs/pm/results/
		 | Peptide Prophet Transfer Root Folder | \\proteinseqs\Peptide_Prophet_Xfer\ | E:\Peptide_Prophet_Xfer
		 | Redgate Backup Transfer Folder |  | E:\Redgate_Backup_Xfer



Step 17b) Configure folder paths in DMS5 on Gigasax
	Customize paths in DMS5.dbo.T_MiscPaths

Step 15) Create shared objects in the Master DB
	Stored Procedures:
		dba_BlockTracer
		sp_Blitz
		sp_blocker_pss80
		sp_SearchForString
		sp_WhereIsItUsed
		sp_WhoIsActive
	Functions:
		dba_GetSQLForSpid (definition is inside dba_BlockTracer.sql)

Step 16) Configure the permissions in MSDB on ProteinSeqs  (not on Gigasax)
		These changes are necessary so that SP EnableDisableJobsAllServers in MTS_Master on Pogo 
		can enable/disable MTS-related Sql Server Agent Jobs

	USE msdb
	CREATE ROLE [RSExecRole] AUTHORIZATION [dbo]

	grant execute on sp_add_category to [RSExecRole]
	grant execute on sp_add_job to [RSExecRole]
	grant execute on sp_add_jobschedule to [RSExecRole]
	grant execute on sp_add_jobserver to [RSExecRole]
	grant execute on sp_add_jobstep to [RSExecRole]
	grant execute on sp_delete_job to [RSExecRole]
	
	grant execute on sp_help_category to [RSExecRole]
	grant execute on sp_help_job to [RSExecRole]
	grant execute on sp_help_jobschedule to [RSExecRole]
	grant execute on sp_verify_job_identifiers to [RSExecRole]
	
	grant select on syscategories to [RSExecRole]
	grant select on sysjobs to [RSExecRole]


	create user mtuser
	go
	
	exec sp_addrolemember 'RSExecRole', 'mtuser'
	go
	
	exec sp_addrolemember 'db_datareader', 'mtuser'
	go

	GRANT SELECT ON [dbo].[sysjobs] TO [mtuser]
	GRANT UPDATE ON [dbo].[sysjobs] TO [mtuser]
	GRANT VIEW DEFINITION ON [dbo].[sysjobs] TO [mtuser]
	go
	
	CREATE ROLE [DMS_SP_User] AUTHORIZATION [dbo]
	GO
	
	exec sp_addrolemember 'DMS_SP_User', 'mtuser'
	go
	
	grant Execute on sp_sqlagent_notify to [DMS_SP_User]
	grant Execute on sp_update_job to [DMS_SP_User]

Step 17a) Configure the permissions in the Master DB on Proteinseqs (Gigasax is below)
	These changes are necessary so that MTUser and MTSProc can save files to disk when calling certain SPs

	Use Master
	CREATE USER [MTUser] FOR LOGIN [mtuser] WITH DEFAULT_SCHEMA=[MTUser]
	CREATE USER [MTAdmin] FOR LOGIN [mtadmin] WITH DEFAULT_SCHEMA=[MTAdmin]

	GRANT EXECUTE ON [sys].[sp_OACreate] TO [MTUser]
	GRANT EXECUTE ON [sys].[sp_OADestroy] TO [MTUser]
	GRANT EXECUTE ON [sys].[sp_OAMethod] TO [MTUser]

	GRANT EXECUTE ON [sys].[sp_OACreate] TO [PNL\MTSProc]
	GRANT EXECUTE ON [sys].[sp_OADestroy] TO [PNL\MTSProc]
	GRANT EXECUTE ON [sys].[sp_OAMethod] TO [PNL\MTSProc]
	GRANT EXECUTE ON [sys].[xp_cmdshell] TO [PNL\MTSProc]

	-- Check permissions using: exec sp_helprotect 'sp_OACreate'


	CREATE ROLE [RSExecRole] AUTHORIZATION [dbo]
	
	EXEC sp_addrolemember N'RSExecRole', N'MTUser'
	
	GRANT EXECUTE ON [sys].[xp_sqlagent_enum_jobs] TO [RSExecRole]
	GRANT EXECUTE ON [sys].[xp_sqlagent_notify] TO [RSExecRole]
	GRANT EXECUTE ON [sys].[xp_sqlagent_is_starting] TO [RSExecRole]


	/**************************************************************************
	** xp_cmdshell note 
	**
	** When user MTSProc calls procedures that use xp_cmdshell, it will run
	** under the xp_cmdshell Proxy Account.  This account must be created
	** by a system admin using:
	**
	** EXEC sp_xp_cmdshell_proxy_account 'PNL\MTSProc', 'TypePasswordHere';
	**
	** Additionally, when the password for MTSProc changes, this
	** command must be run to update the password
	** 
	**************************************************************************/

	-- Whenever the password is changed for user 'PNL\MTSProc', use this to update the password on the MTS servers
	EXEC sp_xp_cmdshell_proxy_account 'PNL\MTSProc', 'TypePasswordHere';




Step 17b) Configure the permissions in the Master DB on Gigasax
	These changes are necessary so that DMSWebUser can save files to disk when calling certain SPs, e.g. CreateXmlDatasetTriggerFile


	Use Master

	CREATE USER [dmsreader] FOR LOGIN [dmsreader] WITH DEFAULT_SCHEMA=[dbo]
	CREATE USER [DMSWebUser] FOR LOGIN [DMSWebUser] WITH DEFAULT_SCHEMA=[dbo]
	CREATE USER [EMSL-Prism.Users.DMS_User] FOR LOGIN [PNL\EMSL-Prism.Users.DMS_User]

	CREATE ROLE [DMS_OA_SPAccess] AUTHORIZATION [dbo]
	
	EXEC sp_addrolemember N'db_datareader', N'dmsreader'
	EXEC sp_addrolemember N'DMS_OA_SPAccess', N'DMSWebUser'
	EXEC sp_addrolemember N'DMS_OA_SPAccess', N'EMSL-Prism.Users.DMS_User'

	GRANT EXECUTE ON [sys].[sp_OACreate] TO [DMS_OA_SPAccess]
	GRANT EXECUTE ON [sys].[sp_OADestroy] TO [DMS_OA_SPAccess]
	GRANT EXECUTE ON [sys].[sp_OAGetErrorInfo] TO [DMS_OA_SPAccess]
	GRANT EXECUTE ON [sys].[sp_OAGetProperty] TO [DMS_OA_SPAccess]
	GRANT EXECUTE ON [sys].[sp_OAMethod] TO [DMS_OA_SPAccess]
	GRANT EXECUTE ON [sys].[sp_OASetProperty] TO [DMS_OA_SPAccess]
	GRANT EXECUTE ON [sys].[sp_OAStop] TO [DMS_OA_SPAccess]

	GRANT EXECUTE ON [sys].[xp_cmdshell] TO [PNL\MTSProc]
	GRANT EXECUTE ON [sys].[xp_cmdshell] TO [DMSWebUser]
	


Step 19) If a new MTS server, configure the GANET Manager and Peptide Prophet manager to poll the server
	\\pub-13\c$\DMS_Programs\DMS5\GANETManager	-> Make new Logs folder and new GANETManager_Elmer.xml file
	Edit batch file: \\pub-13\c$\DMS_Programs\DMS5\MultiProgRunnerSvc\Call_GANETManager.bat

	\\pub-14\c$\DMS_Programs\PeptideProphetManager	-> Make new Logs folder and new GANETManager_Elmer.xml file
	Make new folder at: \\pub-14\c$\PepProphet_WorkDir_Elmer
	Edit batch file: \\pub-14\c$\DMS_Programs\DMS5\MultiProgRunnerSvc\Call_PeptideProphetManager

Step 20) Attach the new databases / migrate DBs from another server
	CREATE DATABASE [MT_A_Dehalogenans_P321] ON ( FILENAME = N'I:\SQLServerData\MT_A_Dehalogenans_P321_data.mdf' ),( FILENAME = N'H:\SQLServerData\MT_A_Dehalogenans_P321_log.ldf' ) FOR ATTACH
	CREATE DATABASE [MT_A_mirum_DSM_43827_P508] ON ( FILENAME = N'I:\SQLServerData\MT_A_mirum_DSM_43827_P508_data.mdf' ),( FILENAME = N'H:\SQLServerData\MT_A_mirum_DSM_43827_P508_log.ldf' ) FOR ATTACH
	CREATE DATABASE [MT_A_phagocytophilium_P379] ON ( FILENAME = N'I:\SQLServerData\MT_A_phagocytophilium_P379_data.mdf' ),( FILENAME = N'H:\SQLServerData\MT_A_phagocytophilium_P379_log.ldf' ) FOR ATTACH
	etc.

Step 21)
	Update the DB permissions by running [UpdateUserPermissions] in each database
	exec UpdateUserPermissions

	Update the permissions for the MTS_Proc user by running the Set_MTSProc_Permissions.sql scripts
		
		-- PT DB Stored Produres
		GRANT EXECUTE ON [dbo].ExportGANETData TO [pnl\MTSProc]
		GRANT EXECUTE ON [dbo].ExportGANETPeptideFile TO [pnl\MTSProc]
		GRANT EXECUTE ON [dbo].ExportPeptideProphetJobList TO [pnl\MTSProc]
		GRANT EXECUTE ON [dbo].RequestGANETUpdateTask TO [pnl\MTSProc]
		GRANT EXECUTE ON [dbo].RequestPeptideProphetTask TO [pnl\MTSProc]
		GRANT EXECUTE ON [dbo].SetGANETUpdateTaskComplete TO [pnl\MTSProc]
		GRANT EXECUTE ON [dbo].SetPeptideProphetTaskComplete TO [pnl\MTSProc]
		
		EXEC sp_addrolemember N'db_ddladmin', N'pnl\MTSProc'
		
		-- Check permissions using: exec sp_helprotect 'sp_OACreate'


		-- MT DB Stored Procedures
		GRANT EXECUTE ON [dbo].ExportGANETData TO [pnl\MTSProc]
		GRANT EXECUTE ON [dbo].ExportGANETPeptideFile TO [pnl\MTSProc]
		GRANT EXECUTE ON [dbo].PostLogEntry TO [pnl\MTSProc]
		GRANT EXECUTE ON [dbo].RequestGANETUpdateTask TO [pnl\MTSProc]
		GRANT EXECUTE ON [dbo].RequestMultiAlignTask TO [pnl\MTSProc]
		GRANT EXECUTE ON [dbo].RequestPeakMatchingTask TO [pnl\MTSProc]
		GRANT EXECUTE ON [dbo].RequestPeptideProphetDBParamsUpdateTask TO [pnl\MTSProc]
		GRANT EXECUTE ON [dbo].SetGANETUpdateTaskComplete TO [pnl\MTSProc]
		GRANT EXECUTE ON [dbo].SetMultiAlignTaskComplete TO [pnl\MTSProc]
		GRANT EXECUTE ON [dbo].SetPeakMatchingTaskComplete TO [pnl\MTSProc]
		GRANT EXECUTE ON [dbo].SetPeakMatchingTaskToRestart TO [pnl\MTSProc]
		GRANT EXECUTE ON [dbo].SetPeptideProphetDBParamsTaskComplete TO [pnl\MTSProc]
		GO
		
		EXEC sp_addrolemember N'db_ddladmin', N'pnl\MTSProc'
		
		-- Check permissions using: exec sp_helprotect 'sp_OACreate'

Step 22) Give the MTSProc user "Logon as a Batch" permissions in Windows
	a) Go to Start, Administrative Tools, Local Security Policy
	b) In the Local Security Policy window, choose Security Settings, Local Policies, User Rights Assignment
	c) Now double click "Log on as a batch job" and click "Add user or group"
	d) Add user "pnl\mtsproc"

Step 22b) Update the permissions for MTUser in MTS_Master (Pogo Only)
	
	exec sp_addrolemember 'db_datawriter', 'MTUser'
	exec sp_addrolemember 'DMS_SP_User', 'MTUser'
	go
	
	grant execute on object::GetAllPeptideDatabasesStatisticsReport to MTUser
	grant execute on object::GetDBSchemaVersionByDBName to MTUser
	grant execute on object::WebGetPickerList to MTUser
	grant execute on object::GetAllProteinDatabases to MTUser
	grant execute on object::MakeProvisionalMTDB to MTUser
	grant execute on object::MakeProvisionalPeptideDB to MTUser
	grant execute on object::MakeProvisionalProteinDB to MTUser
	grant execute on object::UpdateDatabaseStatesSingleTable to MTUser
	grant execute on object::UpdateDatabaseStates to MTUser
	grant execute on object::GetCurrentActivitySummary to MTUser
	grant execute on object::GetAllMassTagDatabases to MTUser
	grant execute on object::GetAllPeptideDatabases to MTUser
	grant execute on object::CleanupTrueFalseParameter to MTUser
	grant execute on object::QuoteNameList to MTUser
	grant execute on object::ConvertListToWhereClause to MTUser
	grant execute on object::ConstructGeneralStatisticsValueList to MTUser
	grant execute on object::GetAllMassTagDatabasesStatisticsReport to MTUser
	go

Step 22c) Update the permissions for MTUser in Prism_RPT (Pogo Only)
	
	GRANT EXECUTE ON [dbo].[UpdateCachedAnalysisTasks] TO [MTUser]
	

Step 23) Configure Sql Server Mail (Object Explorer->ServerName->Management->Database Mail->Configure Database Mail)
	a) In the DB Mail Configuration Wizard, choose "Manage Database Mail accounts and profiles"
	b) Now choose "Create a New Account", then use these settings:
		Account name:		PNNL
		Description: 		
		E-mail address: 	SqlServer@albert.pnl.gov
		Display name: 		SqlServer: Albert
		Reply e-mail: 		SqlServer@albert.pnl.gov
		Server name:		emailgw.pnl.gov
		Port: 25
		Anonymous authentication
	c) Click Next, then Finish
	d) In the DB Mail Configuration Wizard, choose "Manage Database Mail accounts and profiles"
	e) Now choose "Create a New Profile", and name it: MTS_Mail  or  DMS_Mail
	f) Under SMTP Accounts, Click Add, then choose PNNL
	g) Click Next, then Finish
	h) Send a test mail by right clicking on Database Mail and choosing Send Test E-mail


Step 24) Configure the Sql Server Agent operators
	a) Right Click Operators in Sql server Agent, choose New Operator
	b) Enter the person's name and e-mail and click OK

Step 25) Configure the Sql Agent jobs
	Note that you can use SSMS to generate creation scripts for the usual jobs based on an already-configured MTS server
	In Object Explorer, select the Jobs node under Sql Server Agent, then choose View->Object Explorer Details
	Select the desired jobs, right click, and choose "Script Job As Create to New Window"
	Edit the server name, then apply to the new server; see below

Step 26) Increase the Sql Server agent job retention (for table msdb.dbo.sysjobhistory) to 50000 rows, with up to 500 rows per job
		 In addition, enable the Mail Profile for sending alert e-mails
		To make these changes, right click on SQL Server Agent and choose Properties, then:
			On the Alert System tab, check "Enable mail profile" and choose
				Mail System: Database Mail
				Mail profile: MTS_Mail
			Check "Enable fail-safe operator"
				Operator: Matthew Monroe
				Notify Using: e-mail
			On the History tab, check "Limit size of job history job
				Maximum job history log size: 50000 rows
				Maximum job history rows per job: 500

		USE [msdb]
		GO
		EXEC master.dbo.sp_MSsetalertinfo @failsafeoperator=N'Matthew Monroe', 
				@notificationmethod=1
		GO
		USE [msdb]
		GO
		EXEC msdb.dbo.sp_set_sqlagent_properties @email_save_in_sent_folder=1
		GO
		EXEC master.dbo.xp_instance_regwrite N'HKEY_LOCAL_MACHINE', N'SOFTWARE\Microsoft\MSSQLServer\SQLServerAgent', N'UseDatabaseMail', N'REG_DWORD', 1
		GO
		EXEC master.dbo.xp_instance_regwrite N'HKEY_LOCAL_MACHINE', N'SOFTWARE\Microsoft\MSSQLServer\SQLServerAgent', N'DatabaseMailProfile', N'REG_SZ', N'MTS_Mail'
		GO
		USE [msdb]
		GO
		EXEC msdb.dbo.sp_set_sqlagent_properties @jobhistory_max_rows=50000, 
				@jobhistory_max_rows_per_job=500, 
				@email_save_in_sent_folder=1
		GO
		EXEC master.dbo.xp_instance_regwrite N'HKEY_LOCAL_MACHINE', N'SOFTWARE\Microsoft\MSSQLServer\SQLServerAgent', N'UseDatabaseMail', N'REG_DWORD', 1
		GO
		EXEC master.dbo.xp_instance_regwrite N'HKEY_LOCAL_MACHINE', N'SOFTWARE\Microsoft\MSSQLServer\SQLServerAgent', N'DatabaseMailProfile', N'REG_SZ', N'MTS_Mail'
		GO
		
Step 27) Configure the DB Maintenance Plans

	For ProteinSeqs:

	MT DBs - Integrity and Full Backup
		# Runs Sunday at 3:15 pm on ProteinSeqs
		exec MT_Main.dbo.CheckMTSDBs @DBNameMatchList='MT[_]%,DMS%,Manager%,Protein%',                                                       @IncludeMTSInterfaceAndControlDBs=0, @IncludeSystemDBs=0, @CheckDB = 1, @ShrinkDB = 1, @infoOnly=0
		exec MT_Main.dbo.BackupMTSDBs @BackupFolderRoot='', @DBNameMatchList='MT[_]%,DMS%,Manager%,Protein%',       @TransactionLogBackup=0, @IncludeMTSInterfaceAndControlDBs=0, @IncludeSystemDBs=0, @ThreadCount=2, @DaysToKeepOldBackups=13, @Verify=1, @infoOnly=0
	MT DBs - Transaction Log Backup
		# Runs Monday, Tuesday, Wednesday, Thursday, Friday, Sunday at 3:15 pm on ProteinSeqs
		exec MT_Main.dbo.BackupMTSDBs @BackupFolderRoot='', @DBNameMatchList='MT[_]%,DMS%,Manager%,Protein%',       @TransactionLogBackup=1, @IncludeMTSInterfaceAndControlDBs=0, @IncludeSystemDBs=0, @ThreadCount=2, @DaysToKeepOldBackups=13, @Verify=1, @infoOnly=0
	PT and Other DBs - Integrity and Full Backup
		# Runs Thursday at 10:15 am on ProteinSeqs
		exec MT_Main.dbo.CheckMTSDBs @DBNameMatchList='PT[_]%,User%,AdventureWorks%,ReportServer%',                                          @IncludeMTSInterfaceAndControlDBs=1, @IncludeSystemDBs=1, @CheckDB = 1, @ShrinkDB = 1, @infoOnly=0
		exec MT_Main.dbo.BackupMTSDBs @BackupFolderRoot='', @DBNameMatchList='PT[_]%',                              @TransactionLogBackup=0, @IncludeMTSInterfaceAndControlDBs=0, @IncludeSystemDBs=0, @ThreadCount=2, @DaysToKeepOldBackups=13, @Verify=1, @infoOnly=0
		exec MT_Main.dbo.BackupMTSDBs @BackupFolderRoot='', @DBNameMatchList='User%,AdventureWorks%,ReportServer%', @TransactionLogBackup=0, @IncludeMTSInterfaceAndControlDBs=1, @IncludeSystemDBs=0, @ThreadCount=2, @DaysToKeepOldBackups=13, @Verify=1, @infoOnly=0
		exec MT_Main.dbo.BackupMTSDBs @BackupFolderRoot='', @DBNameMatchList='',                                    @TransactionLogBackup=0, @IncludeMTSInterfaceAndControlDBs=0, @IncludeSystemDBs=1, @ThreadCount=2, @DaysToKeepOldBackups=10, @Verify=1, @infoOnly=0
	PT and Other DBs - Transaction Log Backup
		# Runs Monday, Tuesday, Wednesday, Friday, Saturday, Sunday at 10:15 am on ProteinSeqs
		exec MT_Main.dbo.BackupMTSDBs @BackupFolderRoot='', @DBNameMatchList='',                                    @TransactionLogBackup=1, @IncludeMTSInterfaceAndControlDBs=0, @IncludeSystemDBs=1, @ThreadCount=2, @DaysToKeepOldBackups=10, @Verify=1, @infoOnly=0
		exec MT_Main.dbo.BackupMTSDBs @BackupFolderRoot='', @DBNameMatchList='PT[_]%,User%',                        @TransactionLogBackup=1, @IncludeMTSInterfaceAndControlDBs=1, @IncludeSystemDBs=0, @ThreadCount=2, @DaysToKeepOldBackups=13, @Verify=1, @infoOnly=0

	For ProteinSeqs, also include:
	Manager_Control DB - Full Backup Daily 
		# Runs Daily at 11 am
		exec MT_Main.dbo.BackupMTSDBs @BackupFolderRoot='', @DBNameMatchList='Manager_Control', @TransactionLogBackup=0, @IncludeMTSInterfaceAndControlDBs=0, @IncludeSystemDBs=0, @ThreadCount=2, @DaysToKeepOldBackups=20, @Verify=1, @infoOnly=0
			

	For ProteinSeqs2:
	Master Seq DBs - Integrity and Full Backup
		exec MT_Main.dbo.CheckMTSDBs @DBNameMatchList='Master_Seq_Scratch, Master_Sequences', @IncludeMTSInterfaceAndControlDBs=0, @IncludeSystemDBs=0, @CheckDB = 1, @ShrinkDB = 1, @infoOnly=0
		exec MT_Main.dbo.BackupMTSDBs @BackupFolderRoot='\\proto-1\DB_Backups\Master_Sequences\', @DBNameMatchList='Master_Sequences', @TransactionLogBackup=0, @IncludeMTSInterfaceAndControlDBs=0, @IncludeSystemDBs=0, @ThreadCount=4, @DaysToKeepOldBackups=13, @Verify=1, @infoOnly=0
		exec MT_Main.dbo.BackupMTSDBs @BackupFolderRoot='\\proto-1\DB_Backups\Master_Sequences\', @DBNameMatchList='Master_Seq_Scratch', @TransactionLogBackup=0, @IncludeMTSInterfaceAndControlDBs=0, @IncludeSystemDBs=0, @ThreadCount=4, @DaysToKeepOldBackups=13, @Verify=1, @infoOnly=0
	Master Seq DBs - Transaction Log Backup
		exec MT_Main.dbo.BackupMTSDBs @BackupFolderRoot='\\proto-1\DB_Backups\Master_Sequences\', @DBNameMatchList='Master_Sequences', @TransactionLogBackup=1, @IncludeMTSInterfaceAndControlDBs=0, @IncludeSystemDBs=0, @ThreadCount=4, @DaysToKeepOldBackups=13, @Verify=1, @infoOnly=0

	For Gigasax:

	You can export the existing Maintenance Plans from the old gigasax to the new Gigasax by connecting to "Integration Services" in SSMS
	a) Login to the old server (e.g. Proto-6)
	b) Start SSMS
	c) Choose Connect->Integration Services
	d) Enter the old server name (e.g. Proto-6) and connect
	e) Expand Stored Packages->MSDB->Maintenance Plans
	f) Right click each maintenance plan and choose "Export Package"
	g) For each, define:
		Package Location: Sql Server
		Server:           Gigasax
		Authentication type: Windows Authentication
		Package Path:     Click the "..." button, then choose "Maintenance Plans" and click OK
	h) Click OK, and the Maintenance Plan will be copied from Proto-6 to Gigasax

	After doing this, you still have to create a Sql Server Agent job to run each task
	a) Double click each Maintenance plan to open it
	b) Double click the Subplan Name, then click the calendar icon on the Schedule row
	c) Define the schedule for each maintenance plan:

		DMS Integrity Checks
			First Sunday of every 2 months at 10 am
		DMS Other DBs - Integrity and Full Backup
			Every week on Saturday at 5 am
		DMS Other DBs - Transaction Log Backup
			Every day every 8 hours starting at 4:45 am
		DMS Production DBs - Integrity and Full Backup
			Every day at 1 am
		DMS Production DBs - Transaction Log Backup
			Every day evey 1 hour starting at 12:40 am
		Proto-7 Backup of Development DBs
			Every 4 days at 10 pm; start 7/31/2012
		Proto-7 Backup of DMS Historic Log
			Every 16 days at 10 pm; start 8/1/2012
		Proto-7 Backup of Production DBs
			Every 4 days at 10 pm; start 8/2/2012


Step 28) Install Red-Gate SQL Backup
	Run SQLToolbelt_with_SqlBackup_v6.2.exe but only install SQL Backup

		Serial Numbers for installation
		Originally purchased July 12, 2006
		Two year support renewal purchased August 11, 2008
		5 server license: Gigasax, ProteinSeqs, Albert, Roadrunner, and Pogo
			SQL Backup Professional:	010-005-044887-C47A
			SQL Log Rescue:				011-005-042286-3776 
		
		2 server license: Porky and Elmer 
		Originally purchased August 11, 2008
			SQL Backup Professional:	010-002-088379-C67A

	Configure the software using Tools->Sever Options
		Backup Folder: \\proto-1\DB_Backups\Gigasax_Backup\<DATABASE>
		File name format: <DATABASE>_<TYPE>_<DATETIME yyyymmdd_hhnnss>
		Log file folder: C:\ProgramData\Red Gate\SQL Backup\Log\(local)
		Delete log files in this folder: Checked=Yes
			Older than: 180 days
			Delete log files in LOGTO folder: Checked=Yes
		Delete old backup history: Checked=Yes
			Older than : 90 days

		E-mail settings
			SMTP host: emailgw.pnl.gov
			Port:       25
			User Name:  <blank>
			Password:   <blank>
			Send from:  SQLBackup_Gigasax@pnl.gov

	Create a new folder for the server at \\proto-1\DB_Backups\Terasax_Backup


Step 29) Configure any DDL triggers

Trigger #1: trig_AuditDatabaseDDL
	This trigger fires when a database is created or deleted
	From http://www.simple-talk.com/books/sql-books/eating-sql-server-installations-for-breakfast/?utm_source=simpletalk&utm_medium=email&utm_content=newsletter20091130&utm_campaign=SQL

SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TRIGGER [trig_AuditDatabaseDDL]
ON ALL SERVER
FOR CREATE_DATABASE, DROP_DATABASE

AS
 
DECLARE @data XML,
      @tsqlCommand NVARCHAR(MAX),
      @eventType NVARCHAR(100),
      @serverName NVARCHAR(100),
      @loginName NVARCHAR(100),
      @username NVARCHAR(100),
      @databaseName NVARCHAR(100),
      @objectName NVARCHAR(100),
      @objectType NVARCHAR(100),
      @emailBody NVARCHAR(MAX),
	  @emailSubject NVARCHAR(100)
 
SET @data = EVENTDATA()
SET @tsqlCommand = EVENTDATA().value('(/EVENT_INSTANCE/TSQLCommand/CommandText)[1]','nvarchar(max)')
SET @eventType = EVENTDATA().value('(/EVENT_INSTANCE/EventType)[1]','nvarchar(max)')
SET @serverName = EVENTDATA().value('(/EVENT_INSTANCE/ServerName)[1]','nvarchar(max)')
SET @loginName = EVENTDATA().value('(/EVENT_INSTANCE/LoginName)[1]','nvarchar(max)')
SET @userName = EVENTDATA().value('(/EVENT_INSTANCE/UserName)[1]','nvarchar(max)')
SET @databaseName = EVENTDATA().value('(/EVENT_INSTANCE/DatabaseName)[1]','nvarchar(max)')
SET @objectName = EVENTDATA().value('(/EVENT_INSTANCE/ObjectName)[1]','nvarchar(max)')
SET @objectType = EVENTDATA().value('(/EVENT_INSTANCE/ObjectType)[1]','nvarchar(max)')
 
SET @emailBody = + '--------------------------------' + CHAR(13)
             + '- DDL Trigger Activation Report      -' + CHAR(13)
             + '--------------------------------------' + CHAR(13)
             + 'Sql Command: '
                 + ISNULL(@tsqlCommand, 'No Command Given') + CHAR(13)
             + 'Event Type: '
                 + ISNULL(@eventType, 'No Event Type Given') + CHAR(13)
             + 'Server Name: 
               ' + ISNULL(@serverName, 'No Server Given') + CHAR(13)
             + 'Login Name: '
                 + ISNULL(@loginName, 'No LOGIN Given') + CHAR(13)
             + 'User Name: '
                 + ISNULL(@username, 'No User Name Given') + CHAR(13)
             + 'DB Name: '
                 + ISNULL(@databaseName, 'No Database Given') + CHAR(13)
             + 'Object Name: '
                 + ISNULL(@objectName, 'No Object Given') + CHAR(13)
             + 'Object Type: '
                 + ISNULL(@objectType, 'No Type Given') + CHAR(13)
             + '-------------------------------------------';
 
SET @emailSubject = 'Database created/deleted on ' + @@ServerName
 
EXEC msdb..sp_send_dbmail @profile_name='MTS_Mail', @recipients='matthew.monroe@pnl.gov', @subject=@emailSubject, @body=@emailBody

GO
 
SET ANSI_NULLS OFF
GO
 
SET QUOTED_IDENTIFIER OFF
GO

ENABLE TRIGGER [trig_AuditDatabaseDDL] ON ALL SERVER
GO



.................................
.................................
.................................




Step 12) Install IIS
	Choose "Add new role"

Step 13) Configure IIS
	In the Default Web Site, Add a new virtual directory named "pm" and pointing to L:\MTD_Peak_Matching
		Configure for Read and Browse and enable Integrated Windows Authentication and Digest Authentication under 
			Directory Security->Authetication and access control->Edit
	Create C:\Inetpub\wwwroot\default.htm
	Confirm that http://albert/pm/results/index.html is accessible




Step 28) Change the permissions on an OLAP folder to avoid PerfMon access denied messages in the Windows System Log
	a) Go To C:\Program Files\Microsoft SQL Server\MSSQL.2\OLAP
	b) Right click the "bin" folder and choose properties
	c) On the Security tab, click Add, then add user "NETWORK SERVICE"
	d) The NETWORK SERVICE user needs to have Read Access to this folder and the subfolders (subfolders should inherit the permissions)
	e) Click OK to apply the changes

	If you don't do this, the error you might see is:
		Windows cannot load extensible counter DLL MSSQLServerOLAPService, the first DWORD in data section is the Windows error code.



/*****************************************************************************
**
**	Sql to create Linked Servers
**
******************************************************************************/

-- Note: If needed, drop a linked server using:
-- EXEC master.dbo.sp_dropserver @server=N'GIGASAX', @droplogins='droplogins'


/****** Object:  LinkedServer [ALBERT] ******/
EXEC master.dbo.sp_addlinkedserver @server = N'ALBERT', @srvproduct=N'SQL Server'
EXEC master.dbo.sp_addlinkedsrvlogin @rmtsrvname=N'ALBERT',@useself=N'False',@locallogin=NULL,@rmtuser=N'mtuser',@rmtpassword='mt4fun'
GO

EXEC master.dbo.sp_serveroption @server=N'ALBERT', @optname=N'collation compatible', @optvalue=N'false'
EXEC master.dbo.sp_serveroption @server=N'ALBERT', @optname=N'data access', @optvalue=N'true'
EXEC master.dbo.sp_serveroption @server=N'ALBERT', @optname=N'dist', @optvalue=N'false'
EXEC master.dbo.sp_serveroption @server=N'ALBERT', @optname=N'pub', @optvalue=N'false'
EXEC master.dbo.sp_serveroption @server=N'ALBERT', @optname=N'rpc', @optvalue=N'true'
EXEC master.dbo.sp_serveroption @server=N'ALBERT', @optname=N'rpc out', @optvalue=N'true'
EXEC master.dbo.sp_serveroption @server=N'ALBERT', @optname=N'sub', @optvalue=N'false'
EXEC master.dbo.sp_serveroption @server=N'ALBERT', @optname=N'connect timeout', @optvalue=N'0'
EXEC master.dbo.sp_serveroption @server=N'ALBERT', @optname=N'collation name', @optvalue=null
EXEC master.dbo.sp_serveroption @server=N'ALBERT', @optname=N'lazy schema validation', @optvalue=N'false'
EXEC master.dbo.sp_serveroption @server=N'ALBERT', @optname=N'query timeout', @optvalue=N'0'
EXEC master.dbo.sp_serveroption @server=N'ALBERT', @optname=N'use remote collation', @optvalue=N'false'
EXEC master.dbo.sp_serveroption @server=N'ALBERT', @optname=N'remote proc transaction promotion', @optvalue=N'true'
GO

/****** Object:  LinkedServer [Daffy] ******/
EXEC master.dbo.sp_addlinkedserver @server = N'Daffy', @srvproduct=N'SQL Server'
EXEC master.dbo.sp_addlinkedsrvlogin @rmtsrvname=N'Daffy',@useself=N'False',@locallogin=NULL,@rmtuser=N'mtuser',@rmtpassword='mt4fun'
GO

EXEC master.dbo.sp_serveroption @server=N'Daffy', @optname=N'collation compatible', @optvalue=N'false'
EXEC master.dbo.sp_serveroption @server=N'Daffy', @optname=N'data access', @optvalue=N'true'
EXEC master.dbo.sp_serveroption @server=N'Daffy', @optname=N'dist', @optvalue=N'false'
EXEC master.dbo.sp_serveroption @server=N'Daffy', @optname=N'pub', @optvalue=N'false'
EXEC master.dbo.sp_serveroption @server=N'Daffy', @optname=N'rpc', @optvalue=N'true'
EXEC master.dbo.sp_serveroption @server=N'Daffy', @optname=N'rpc out', @optvalue=N'true'
EXEC master.dbo.sp_serveroption @server=N'Daffy', @optname=N'sub', @optvalue=N'false'
EXEC master.dbo.sp_serveroption @server=N'Daffy', @optname=N'connect timeout', @optvalue=N'0'
EXEC master.dbo.sp_serveroption @server=N'Daffy', @optname=N'collation name', @optvalue=null
EXEC master.dbo.sp_serveroption @server=N'Daffy', @optname=N'lazy schema validation', @optvalue=N'false'
EXEC master.dbo.sp_serveroption @server=N'Daffy', @optname=N'query timeout', @optvalue=N'0'
EXEC master.dbo.sp_serveroption @server=N'Daffy', @optname=N'use remote collation', @optvalue=N'false'
EXEC master.dbo.sp_serveroption @server=N'Daffy', @optname=N'remote proc transaction promotion', @optvalue=N'true'
GO

/****** Object:  LinkedServer [ELMER] ******/
EXEC master.dbo.sp_addlinkedserver @server = N'ELMER', @srvproduct=N'SQL Server'
EXEC master.dbo.sp_addlinkedsrvlogin @rmtsrvname=N'ELMER',@useself=N'False',@locallogin=NULL,@rmtuser=N'mtuser',@rmtpassword='mt4fun'
GO

EXEC master.dbo.sp_serveroption @server=N'ELMER', @optname=N'collation compatible', @optvalue=N'false'
EXEC master.dbo.sp_serveroption @server=N'ELMER', @optname=N'data access', @optvalue=N'true'
EXEC master.dbo.sp_serveroption @server=N'ELMER', @optname=N'dist', @optvalue=N'false'
EXEC master.dbo.sp_serveroption @server=N'ELMER', @optname=N'pub', @optvalue=N'false'
EXEC master.dbo.sp_serveroption @server=N'ELMER', @optname=N'rpc', @optvalue=N'true'
EXEC master.dbo.sp_serveroption @server=N'ELMER', @optname=N'rpc out', @optvalue=N'true'
EXEC master.dbo.sp_serveroption @server=N'ELMER', @optname=N'sub', @optvalue=N'false'
EXEC master.dbo.sp_serveroption @server=N'ELMER', @optname=N'connect timeout', @optvalue=N'0'
EXEC master.dbo.sp_serveroption @server=N'ELMER', @optname=N'collation name', @optvalue=null
EXEC master.dbo.sp_serveroption @server=N'ELMER', @optname=N'lazy schema validation', @optvalue=N'false'
EXEC master.dbo.sp_serveroption @server=N'ELMER', @optname=N'query timeout', @optvalue=N'0'
EXEC master.dbo.sp_serveroption @server=N'ELMER', @optname=N'use remote collation', @optvalue=N'false'
EXEC master.dbo.sp_serveroption @server=N'ELMER', @optname=N'remote proc transaction promotion', @optvalue=N'true'
GO

/****** Object:  LinkedServer [POGO] ******/
EXEC master.dbo.sp_addlinkedserver @server = N'POGO', @srvproduct=N'SQL Server'
EXEC master.dbo.sp_addlinkedsrvlogin @rmtsrvname=N'POGO',@useself=N'False',@locallogin=NULL,@rmtuser=N'mtuser',@rmtpassword='mt4fun'
GO

EXEC master.dbo.sp_serveroption @server=N'POGO', @optname=N'collation compatible', @optvalue=N'false'
EXEC master.dbo.sp_serveroption @server=N'POGO', @optname=N'data access', @optvalue=N'true'
EXEC master.dbo.sp_serveroption @server=N'POGO', @optname=N'dist', @optvalue=N'false'
EXEC master.dbo.sp_serveroption @server=N'POGO', @optname=N'pub', @optvalue=N'false'
EXEC master.dbo.sp_serveroption @server=N'POGO', @optname=N'rpc', @optvalue=N'true'
EXEC master.dbo.sp_serveroption @server=N'POGO', @optname=N'rpc out', @optvalue=N'true'
EXEC master.dbo.sp_serveroption @server=N'POGO', @optname=N'sub', @optvalue=N'false'
EXEC master.dbo.sp_serveroption @server=N'POGO', @optname=N'connect timeout', @optvalue=N'0'
EXEC master.dbo.sp_serveroption @server=N'POGO', @optname=N'collation name', @optvalue=null
EXEC master.dbo.sp_serveroption @server=N'POGO', @optname=N'lazy schema validation', @optvalue=N'false'
EXEC master.dbo.sp_serveroption @server=N'POGO', @optname=N'query timeout', @optvalue=N'0'
EXEC master.dbo.sp_serveroption @server=N'POGO', @optname=N'use remote collation', @optvalue=N'false'
EXEC master.dbo.sp_serveroption @server=N'POGO', @optname=N'remote proc transaction promotion', @optvalue=N'true'
GO

/****** Object:  LinkedServer [PORKY] ******/
EXEC master.dbo.sp_addlinkedserver @server = N'PORKY', @srvproduct=N'SQL Server'
EXEC master.dbo.sp_addlinkedsrvlogin @rmtsrvname=N'PORKY',@useself=N'False',@locallogin=NULL,@rmtuser=N'mtuser',@rmtpassword='mt4fun'
GO

EXEC master.dbo.sp_serveroption @server=N'PORKY', @optname=N'collation compatible', @optvalue=N'false'
EXEC master.dbo.sp_serveroption @server=N'PORKY', @optname=N'data access', @optvalue=N'true'
EXEC master.dbo.sp_serveroption @server=N'PORKY', @optname=N'dist', @optvalue=N'false'
EXEC master.dbo.sp_serveroption @server=N'PORKY', @optname=N'pub', @optvalue=N'false'
EXEC master.dbo.sp_serveroption @server=N'PORKY', @optname=N'rpc', @optvalue=N'true'
EXEC master.dbo.sp_serveroption @server=N'PORKY', @optname=N'rpc out', @optvalue=N'true'
EXEC master.dbo.sp_serveroption @server=N'PORKY', @optname=N'sub', @optvalue=N'false'
EXEC master.dbo.sp_serveroption @server=N'PORKY', @optname=N'connect timeout', @optvalue=N'0'
EXEC master.dbo.sp_serveroption @server=N'PORKY', @optname=N'collation name', @optvalue=null
EXEC master.dbo.sp_serveroption @server=N'PORKY', @optname=N'lazy schema validation', @optvalue=N'false'
EXEC master.dbo.sp_serveroption @server=N'PORKY', @optname=N'query timeout', @optvalue=N'0'
EXEC master.dbo.sp_serveroption @server=N'PORKY', @optname=N'use remote collation', @optvalue=N'false'
EXEC master.dbo.sp_serveroption @server=N'PORKY', @optname=N'remote proc transaction promotion', @optvalue=N'true'
GO

/****** Object:  LinkedServer [PROTEINSEQS] ******/
EXEC master.dbo.sp_addlinkedserver @server = N'PROTEINSEQS', @srvproduct=N'SQL Server'
EXEC master.dbo.sp_addlinkedsrvlogin @rmtsrvname=N'PROTEINSEQS',@useself=N'False',@locallogin=NULL,@rmtuser=N'mtuser',@rmtpassword='mt4fun'

EXEC master.dbo.sp_serveroption @server=N'PROTEINSEQS', @optname=N'collation compatible', @optvalue=N'false'
EXEC master.dbo.sp_serveroption @server=N'PROTEINSEQS', @optname=N'data access', @optvalue=N'true'
EXEC master.dbo.sp_serveroption @server=N'PROTEINSEQS', @optname=N'dist', @optvalue=N'false'
EXEC master.dbo.sp_serveroption @server=N'PROTEINSEQS', @optname=N'pub', @optvalue=N'false'
EXEC master.dbo.sp_serveroption @server=N'PROTEINSEQS', @optname=N'rpc', @optvalue=N'true'
EXEC master.dbo.sp_serveroption @server=N'PROTEINSEQS', @optname=N'rpc out', @optvalue=N'true'
EXEC master.dbo.sp_serveroption @server=N'PROTEINSEQS', @optname=N'sub', @optvalue=N'false'
EXEC master.dbo.sp_serveroption @server=N'PROTEINSEQS', @optname=N'connect timeout', @optvalue=N'0'
EXEC master.dbo.sp_serveroption @server=N'PROTEINSEQS', @optname=N'collation name', @optvalue=null
EXEC master.dbo.sp_serveroption @server=N'PROTEINSEQS', @optname=N'lazy schema validation', @optvalue=N'false'
EXEC master.dbo.sp_serveroption @server=N'PROTEINSEQS', @optname=N'query timeout', @optvalue=N'0'
EXEC master.dbo.sp_serveroption @server=N'PROTEINSEQS', @optname=N'use remote collation', @optvalue=N'false'
EXEC master.dbo.sp_serveroption @server=N'PROTEINSEQS', @optname=N'remote proc transaction promotion', @optvalue=N'true'
GO

/****** Object:  LinkedServer [ProteinSeqs2] ******/
EXEC master.dbo.sp_addlinkedserver @server = N'ProteinSeqs2', @srvproduct=N'SQL Server'
EXEC master.dbo.sp_addlinkedsrvlogin @rmtsrvname=N'ProteinSeqs2',@useself=N'False',@locallogin=NULL,@rmtuser=N'mtuser',@rmtpassword='mt4fun'
GO

EXEC master.dbo.sp_serveroption @server=N'ProteinSeqs2', @optname=N'collation compatible', @optvalue=N'false'
EXEC master.dbo.sp_serveroption @server=N'ProteinSeqs2', @optname=N'data access', @optvalue=N'true'
EXEC master.dbo.sp_serveroption @server=N'ProteinSeqs2', @optname=N'dist', @optvalue=N'false'
EXEC master.dbo.sp_serveroption @server=N'ProteinSeqs2', @optname=N'pub', @optvalue=N'false'
EXEC master.dbo.sp_serveroption @server=N'ProteinSeqs2', @optname=N'rpc', @optvalue=N'true'
EXEC master.dbo.sp_serveroption @server=N'ProteinSeqs2', @optname=N'rpc out', @optvalue=N'true'
EXEC master.dbo.sp_serveroption @server=N'ProteinSeqs2', @optname=N'sub', @optvalue=N'false'
EXEC master.dbo.sp_serveroption @server=N'ProteinSeqs2', @optname=N'connect timeout', @optvalue=N'0'
EXEC master.dbo.sp_serveroption @server=N'ProteinSeqs2', @optname=N'collation name', @optvalue=null
EXEC master.dbo.sp_serveroption @server=N'ProteinSeqs2', @optname=N'lazy schema validation', @optvalue=N'false'
EXEC master.dbo.sp_serveroption @server=N'ProteinSeqs2', @optname=N'query timeout', @optvalue=N'0'
EXEC master.dbo.sp_serveroption @server=N'ProteinSeqs2', @optname=N'use remote collation', @optvalue=N'false'
EXEC master.dbo.sp_serveroption @server=N'ProteinSeqs2', @optname=N'remote proc transaction promotion', @optvalue=N'true'
GO

/****** Object:  LinkedServer [ROADRUNNER] ******/
EXEC master.dbo.sp_addlinkedserver @server = N'ROADRUNNER', @srvproduct=N'SQL Server'
EXEC master.dbo.sp_addlinkedsrvlogin @rmtsrvname=N'ROADRUNNER',@useself=N'False',@locallogin=NULL,@rmtuser=N'mtuser',@rmtpassword='mt4fun'
GO

EXEC master.dbo.sp_serveroption @server=N'ROADRUNNER', @optname=N'collation compatible', @optvalue=N'false'
EXEC master.dbo.sp_serveroption @server=N'ROADRUNNER', @optname=N'data access', @optvalue=N'true'
EXEC master.dbo.sp_serveroption @server=N'ROADRUNNER', @optname=N'dist', @optvalue=N'false'
EXEC master.dbo.sp_serveroption @server=N'ROADRUNNER', @optname=N'pub', @optvalue=N'false'
EXEC master.dbo.sp_serveroption @server=N'ROADRUNNER', @optname=N'rpc', @optvalue=N'true'
EXEC master.dbo.sp_serveroption @server=N'ROADRUNNER', @optname=N'rpc out', @optvalue=N'true'
EXEC master.dbo.sp_serveroption @server=N'ROADRUNNER', @optname=N'sub', @optvalue=N'false'
EXEC master.dbo.sp_serveroption @server=N'ROADRUNNER', @optname=N'connect timeout', @optvalue=N'0'
EXEC master.dbo.sp_serveroption @server=N'ROADRUNNER', @optname=N'collation name', @optvalue=null
EXEC master.dbo.sp_serveroption @server=N'ROADRUNNER', @optname=N'lazy schema validation', @optvalue=N'false'
EXEC master.dbo.sp_serveroption @server=N'ROADRUNNER', @optname=N'query timeout', @optvalue=N'0'
EXEC master.dbo.sp_serveroption @server=N'ROADRUNNER', @optname=N'use remote collation', @optvalue=N'false'
EXEC master.dbo.sp_serveroption @server=N'ROADRUNNER', @optname=N'remote proc transaction promotion', @optvalue=N'true'
GO


/****** Object:  LinkedServer [GIGASAX] ******/
EXEC master.dbo.sp_addlinkedserver @server = N'GIGASAX', @srvproduct=N'SQL Server'
EXEC master.dbo.sp_addlinkedsrvlogin @rmtsrvname=N'GIGASAX',@useself=N'False',@locallogin=NULL,@rmtuser=N'DMSReader',@rmtpassword='dms4fun'
GO

EXEC master.dbo.sp_serveroption @server=N'GIGASAX', @optname=N'collation compatible', @optvalue=N'false'
EXEC master.dbo.sp_serveroption @server=N'GIGASAX', @optname=N'data access', @optvalue=N'true'
EXEC master.dbo.sp_serveroption @server=N'GIGASAX', @optname=N'dist', @optvalue=N'false'
EXEC master.dbo.sp_serveroption @server=N'GIGASAX', @optname=N'pub', @optvalue=N'false'
EXEC master.dbo.sp_serveroption @server=N'GIGASAX', @optname=N'rpc', @optvalue=N'true'
EXEC master.dbo.sp_serveroption @server=N'GIGASAX', @optname=N'rpc out', @optvalue=N'true'
EXEC master.dbo.sp_serveroption @server=N'GIGASAX', @optname=N'sub', @optvalue=N'false'
EXEC master.dbo.sp_serveroption @server=N'GIGASAX', @optname=N'connect timeout', @optvalue=N'0'
EXEC master.dbo.sp_serveroption @server=N'GIGASAX', @optname=N'collation name', @optvalue=null
EXEC master.dbo.sp_serveroption @server=N'GIGASAX', @optname=N'lazy schema validation', @optvalue=N'false'
EXEC master.dbo.sp_serveroption @server=N'GIGASAX', @optname=N'query timeout', @optvalue=N'0'
EXEC master.dbo.sp_serveroption @server=N'GIGASAX', @optname=N'use remote collation', @optvalue=N'false'
EXEC master.dbo.sp_serveroption @server=N'GIGASAX', @optname=N'remote proc transaction promotion', @optvalue=N'true'
GO




/*****************************************************************************
**
**	Sql to add important Sql Server Agent Alerts
**  Original at: 
**	  F:\My Documents\SQL\MasterDB\AddImportantSqlAgentAlerts.sql
**
******************************************************************************/

-- Add important SQL Agent Alerts
-- Change Alert names and operator_name as needed
-- Glenn Berry
-- SQLskills
-- 9-10-2012
--
-- Downloaded from http://www.simple-talk.com/sql/database-administration/provisioning-a-new-sql-server-instance-%E2%80%93-part-three
--
-- Additional alerts added 3/25/2013 based on guidance at http://www.brentozar.com/blitz/configure-sql-server-alerts/

USE [msdb];
GO

-- Change @OperatorName as needed
-- Alert Names start with the name of the server
DECLARE @OperatorName SYSNAME = N'Matthew Monroe';
DECLARE @Sev16AlertName SYSNAME = N'MonroeAlert - Sev 16 Warning: Execution Problem';
DECLARE @Sev17AlertName SYSNAME = N'MonroeAlert - Sev 17 Error: Insufficient Resources';
DECLARE @Sev18AlertName SYSNAME = N'MonroeAlert - Sev 18 Error: Nonfatal Internal Error Detected';
DECLARE @Sev19AlertName SYSNAME = N'MonroeAlert - Sev 19 Error: Fatal Error in Resource';
DECLARE @Sev20AlertName SYSNAME = N'MonroeAlert - Sev 20 Error: Fatal Error in Current Process';
DECLARE @Sev21AlertName SYSNAME = N'MonroeAlert - Sev 21 Error: Fatal Error in Database Process';
DECLARE @Sev22AlertName SYSNAME = N'MonroeAlert - Sev 22 Error: Fatal Error: Table Integrity Suspect';
DECLARE @Sev23AlertName SYSNAME = N'MonroeAlert - Sev 23 Error: Fatal Error Database Integrity Suspect';
DECLARE @Sev24AlertName SYSNAME = N'MonroeAlert - Sev 24 Error: Fatal Hardware Error';
DECLARE @Sev25AlertName SYSNAME = N'MonroeAlert - Sev 25 Error: Fatal Error';
DECLARE @Error823AlertName SYSNAME = N'MonroeAlert - Error 823: I/O subsystem problem';
DECLARE @Error824AlertName SYSNAME = N'MonroeAlert - Error 824: I/O subsystem problem';
DECLARE @Error825AlertName SYSNAME = N'MonroeAlert - Error 825: Read-Retry Required';


-- Sev 16 Warning
If Not Exists (SELECT * FROM msdb.dbo.sysalerts where name = @Sev16AlertName)
Begin
	EXEC msdb.dbo.sp_add_alert @name = @Sev16AlertName, 
	              @message_id=0, 
	              @Severity=16, 
	              @enabled=1, 
	              @delay_between_responses=900, 
	              @include_event_description_in=1, 
	              @job_id=N'00000000-0000-0000-0000-000000000000';
	
	EXEC msdb.dbo.sp_add_notification @alert_name = @Sev16AlertName, 
	@operator_name=@OperatorName, @notification_method = 1;
End

-- Sev 17 Error: Insufficient Resources
If Not Exists (SELECT * FROM msdb.dbo.sysalerts where name = @Sev17AlertName)
Begin
	EXEC msdb.dbo.sp_add_alert @name = @Sev17AlertName, 
	              @message_id=0, 
	              @Severity=17, 
	              @enabled=1, 
	              @delay_between_responses=900, 
	              @include_event_description_in=1, 
	              @job_id=N'00000000-0000-0000-0000-000000000000';
	
	EXEC msdb.dbo.sp_add_notification @alert_name = @Sev17AlertName, 
	@operator_name=@OperatorName, @notification_method = 1;
End

-- Sev 18 Error: Nonfatal Internal Error Detected
If Not Exists (SELECT * FROM msdb.dbo.sysalerts where name = @Sev18AlertName)
Begin
	EXEC msdb.dbo.sp_add_alert @name = @Sev18AlertName, 
	              @message_id=0, 
	              @Severity=18, 
	              @enabled=1, 
	              @delay_between_responses=900, 
	              @include_event_description_in=1, 
	              @job_id=N'00000000-0000-0000-0000-000000000000';
	
	EXEC msdb.dbo.sp_add_notification @alert_name = @Sev18AlertName, 
	@operator_name=@OperatorName, @notification_method = 1;
End

-- Sev 19 Error: Fatal Error in Resource
If Not Exists (SELECT * FROM msdb.dbo.sysalerts where name = @Sev19AlertName)
Begin
	EXEC msdb.dbo.sp_add_alert @name = @Sev19AlertName, 
	              @message_id=0, 
	              @Severity=19, 
	              @enabled=1, 
	              @delay_between_responses=60, 
	              @include_event_description_in=1, 
	              @job_id=N'00000000-0000-0000-0000-000000000000';
	
	EXEC msdb.dbo.sp_add_notification @alert_name = @Sev19AlertName, 
	@operator_name=@OperatorName, @notification_method = 1;
End

-- Sev 20 Error: Fatal Error in Current Process
If Not Exists (SELECT * FROM msdb.dbo.sysalerts where name = @Sev20AlertName)
Begin	
	EXEC msdb.dbo.sp_add_alert @name = @Sev20AlertName, 
	              @message_id=0, 
	              @Severity=20, 
	              @enabled=1, 
	              @delay_between_responses=60, 
	              @include_event_description_in=1, 
	              @job_id=N'00000000-0000-0000-0000-000000000000'
	
	EXEC msdb.dbo.sp_add_notification @alert_name = @Sev20AlertName, 
	@operator_name=@OperatorName, @notification_method = 1;
End

-- Sev 21 Error: Fatal Error in Database Process
If Not Exists (SELECT * FROM msdb.dbo.sysalerts where name = @Sev21AlertName)
Begin	
	EXEC msdb.dbo.sp_add_alert @name = @Sev21AlertName, 
	              @message_id=0, 
	              @Severity=21, 
	              @enabled=1, 
	              @delay_between_responses=60, 
	              @include_event_description_in=1, 
	              @job_id=N'00000000-0000-0000-0000-000000000000'
	
	EXEC msdb.dbo.sp_add_notification @alert_name = @Sev21AlertName, 
	@operator_name=@OperatorName, @notification_method = 1;
End

-- Sev 22 Error: Fatal Error Table Integrity Suspect
If Not Exists (SELECT * FROM msdb.dbo.sysalerts where name = @Sev22AlertName)
Begin	
	EXEC msdb.dbo.sp_add_alert @name = @Sev22AlertName, 
	              @message_id=0, 
	              @Severity=22, 
	              @enabled=1, 
	              @delay_between_responses=60, 
	              @include_event_description_in=1, 
	              @job_id=N'00000000-0000-0000-0000-000000000000'
	
	EXEC msdb.dbo.sp_add_notification @alert_name = @Sev22AlertName, 
	@operator_name=@OperatorName, @notification_method = 1;
End

-- Sev 23 Error: Fatal Error Database Integrity Suspect
If Not Exists (SELECT * FROM msdb.dbo.sysalerts where name = @Sev23AlertName)
Begin	
	EXEC msdb.dbo.sp_add_alert @name = @Sev23AlertName, 
	              @message_id=0, 
	              @Severity=23, 
	              @enabled=1, 
	              @delay_between_responses=60, 
	              @include_event_description_in=1, 
	              @job_id=N'00000000-0000-0000-0000-000000000000'
	
	EXEC msdb.dbo.sp_add_notification @alert_name = @Sev23AlertName, 
	@operator_name=@OperatorName, @notification_method = 1;
End

-- Sev 24 Error: Fatal Hardware Error
If Not Exists (SELECT * FROM msdb.dbo.sysalerts where name = @Sev24AlertName)
Begin	
	EXEC msdb.dbo.sp_add_alert @name = @Sev24AlertName, 
	              @message_id=0, 
	              @Severity=24, 
	              @enabled=1, 
	              @delay_between_responses=60, 
	              @include_event_description_in=1, 
	              @job_id=N'00000000-0000-0000-0000-000000000000'
	
	EXEC msdb.dbo.sp_add_notification @alert_name = @Sev24AlertName, 
	@operator_name=@OperatorName, @notification_method = 1;
End

-- Sev 25 Error: Fatal Error
If Not Exists (SELECT * FROM msdb.dbo.sysalerts where name = @Sev25AlertName)
Begin
	EXEC msdb.dbo.sp_add_alert @name = @Sev25AlertName, 
	              @message_id=0, 
	              @Severity=25, 
	              @enabled=1, 
	              @delay_between_responses=60, 
	              @include_event_description_in=1, 
	              @job_id=N'00000000-0000-0000-0000-000000000000'
	
	EXEC msdb.dbo.sp_add_notification @alert_name = @Sev25AlertName, 
	@operator_name=@OperatorName, @notification_method = 1;
End

-- Error 823
If Not Exists (SELECT * FROM msdb.dbo.sysalerts where name = @Error823AlertName)
Begin
	EXEC msdb.dbo.sp_add_alert @name = @Error823AlertName, 
	              @message_id=823, 
	              @Severity=0, 
	              @enabled=1, 
	              @delay_between_responses=900, 
	              @include_event_description_in=1, 
	              @category_name=N'[Uncategorized]', 
	              @job_id=N'00000000-0000-0000-0000-000000000000';
	
	EXEC msdb.dbo.sp_add_notification @alert_name = @Error823AlertName, 
	@operator_name=@OperatorName, @notification_method = 1;
End

-- Error 824
If Not Exists (SELECT * FROM msdb.dbo.sysalerts where name = @Error824AlertName)
Begin
	EXEC msdb.dbo.sp_add_alert @name = @Error824AlertName, 
	              @message_id=824, 
	              @Severity=0, 
	              @enabled=1, 
	              @delay_between_responses=900, 
	              @include_event_description_in=1, 
	              @category_name=N'[Uncategorized]', 
	              @job_id=N'00000000-0000-0000-0000-000000000000';
	
	EXEC msdb.dbo.sp_add_notification @alert_name = @Error824AlertName, 
	@operator_name=@OperatorName, @notification_method = 1;
End


-- Error 825: Read-Retry Required
If Not Exists (SELECT * FROM msdb.dbo.sysalerts where name = @Error825AlertName)
Begin
	EXEC msdb.dbo.sp_add_alert @name = @Error825AlertName, 
	              @message_id=825, 
	              @Severity=0, 
	              @enabled=1, 
	              @delay_between_responses=900, 
	              @include_event_description_in=1, 
	              @category_name=N'[Uncategorized]', 
	              @job_id=N'00000000-0000-0000-0000-000000000000';
	
	EXEC msdb.dbo.sp_add_notification @alert_name = @Error825AlertName, 
	@operator_name=@OperatorName, @notification_method = 1;
End

GO



/*****************************************************************************
**
**	Sql to create Sql Server Agent jobs on ProteinSeqs
**
******************************************************************************/

USE [msdb]
GO

/****** Object:  Job [Delete RedGate DB Backup Files]    Script Date: 07/31/2012 18:53:20 ******/
BEGIN TRANSACTION
DECLARE @ReturnCode INT
SELECT @ReturnCode = 0
/****** Object:  JobCategory [Database Maintenance]    Script Date: 07/31/2012 18:53:20 ******/
IF NOT EXISTS (SELECT name FROM msdb.dbo.syscategories WHERE name=N'Database Maintenance' AND category_class=1)
BEGIN
EXEC @ReturnCode = msdb.dbo.sp_add_category @class=N'JOB', @type=N'LOCAL', @name=N'Database Maintenance'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback

END

DECLARE @jobId BINARY(16)
EXEC @ReturnCode =  msdb.dbo.sp_add_job @job_name=N'Delete RedGate DB Backup Files', 
		@enabled=1, 
		@notify_level_eventlog=0, 
		@notify_level_email=2, 
		@notify_level_netsend=0, 
		@notify_level_page=0, 
		@delete_level=0, 
		@description=N'No description available.', 
		@category_name=N'Database Maintenance', 
		@owner_login_name=N'sa', 
		@notify_email_operator_name=N'Matthew Monroe', @job_id = @jobId OUTPUT
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
/****** Object:  Step [Delete RedGate DB Backup Files]    Script Date: 07/31/2012 18:53:21 ******/
EXEC @ReturnCode = msdb.dbo.sp_add_jobstep @job_id=@jobId, @step_name=N'Delete RedGate DB Backup Files', 
		@step_id=1, 
		@cmdexec_success_code=0, 
		@on_success_action=1, 
		@on_success_step_id=0, 
		@on_fail_action=2, 
		@on_fail_step_id=0, 
		@retry_attempts=0, 
		@retry_interval=0, 
		@os_run_priority=0, @subsystem=N'CmdExec', 
		@command=N'H:\Redgate_Backup_Xfer\Delete_Old_Sqb_Files.bat', 
		@flags=0
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_update_job @job_id = @jobId, @start_step_id = 1
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobschedule @job_id=@jobId, @name=N'Delete RedGate DB Backup Files Every 4 hours', 
		@enabled=1, 
		@freq_type=4, 
		@freq_interval=1, 
		@freq_subday_type=8, 
		@freq_subday_interval=4, 
		@freq_relative_interval=0, 
		@freq_recurrence_factor=0, 
		@active_start_date=20070502, 
		@active_end_date=99991231, 
		@active_start_time=11100, 
		@active_end_time=235959, 
		@schedule_uid=N'b2022d46-31c5-4e80-bebb-fcfa600e1367'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobserver @job_id = @jobId, @server_name = N'(local)'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
COMMIT TRANSACTION
GOTO EndSave
QuitWithRollback:
    IF (@@TRANCOUNT > 0) ROLLBACK TRANSACTION
EndSave:

GO

/****** Object:  Job [Disable All Managers Once]    Script Date: 07/31/2012 18:53:21 ******/
BEGIN TRANSACTION
DECLARE @ReturnCode INT
SELECT @ReturnCode = 0
/****** Object:  JobCategory [Manager Control]    Script Date: 07/31/2012 18:53:21 ******/
IF NOT EXISTS (SELECT name FROM msdb.dbo.syscategories WHERE name=N'Manager Control' AND category_class=1)
BEGIN
EXEC @ReturnCode = msdb.dbo.sp_add_category @class=N'JOB', @type=N'LOCAL', @name=N'Manager Control'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback

END

DECLARE @jobId BINARY(16)
EXEC @ReturnCode =  msdb.dbo.sp_add_job @job_name=N'Disable All Managers Once', 
		@enabled=1, 
		@notify_level_eventlog=0, 
		@notify_level_email=2, 
		@notify_level_netsend=0, 
		@notify_level_page=0, 
		@delete_level=0, 
		@description=N'No description available.', 
		@category_name=N'Manager Control', 
		@owner_login_name=N'sa', 
		@notify_email_operator_name=N'Matthew Monroe', @job_id = @jobId OUTPUT
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
/****** Object:  Step [Disable All Managers Once]    Script Date: 07/31/2012 18:53:21 ******/
EXEC @ReturnCode = msdb.dbo.sp_add_jobstep @job_id=@jobId, @step_name=N'Disable All Managers Once', 
		@step_id=1, 
		@cmdexec_success_code=0, 
		@on_success_action=1, 
		@on_success_step_id=0, 
		@on_fail_action=2, 
		@on_fail_step_id=0, 
		@retry_attempts=0, 
		@retry_interval=0, 
		@os_run_priority=0, @subsystem=N'TSQL', 
		@command=N'exec EnableDisableAllManagers
    @Enable = 0,
    @PreviewUpdates=0', 
		@database_name=N'Manager_Control', 
		@flags=0
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_update_job @job_id = @jobId, @start_step_id = 1
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobschedule @job_id=@jobId, @name=N'Disable All Managers Once', 
		@enabled=0, 
		@freq_type=1, 
		@freq_interval=0, 
		@freq_subday_type=0, 
		@freq_subday_interval=0, 
		@freq_relative_interval=0, 
		@freq_recurrence_factor=0, 
		@active_start_date=20120731, 
		@active_end_date=99991231, 
		@active_start_time=50000, 
		@active_end_time=235959, 
		@schedule_uid=N'59cdd839-2295-4386-9f58-f42094178ccb'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobserver @job_id = @jobId, @server_name = N'(local)'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
COMMIT TRANSACTION
GOTO EndSave
QuitWithRollback:
    IF (@@TRANCOUNT > 0) ROLLBACK TRANSACTION
EndSave:

GO

/****** Object:  Job [Disable Analysis Managers Once]    Script Date: 07/31/2012 18:53:21 ******/
BEGIN TRANSACTION
DECLARE @ReturnCode INT
SELECT @ReturnCode = 0
/****** Object:  JobCategory [Manager Control]    Script Date: 07/31/2012 18:53:21 ******/
IF NOT EXISTS (SELECT name FROM msdb.dbo.syscategories WHERE name=N'Manager Control' AND category_class=1)
BEGIN
EXEC @ReturnCode = msdb.dbo.sp_add_category @class=N'JOB', @type=N'LOCAL', @name=N'Manager Control'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback

END

DECLARE @jobId BINARY(16)
EXEC @ReturnCode =  msdb.dbo.sp_add_job @job_name=N'Disable Analysis Managers Once', 
		@enabled=1, 
		@notify_level_eventlog=0, 
		@notify_level_email=2, 
		@notify_level_netsend=0, 
		@notify_level_page=0, 
		@delete_level=0, 
		@description=N'Disables all analysis managers', 
		@category_name=N'Manager Control', 
		@owner_login_name=N'sa', 
		@notify_email_operator_name=N'Matthew Monroe', @job_id = @jobId OUTPUT
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
/****** Object:  Step [Disable Analysis Managers]    Script Date: 07/31/2012 18:53:21 ******/
EXEC @ReturnCode = msdb.dbo.sp_add_jobstep @job_id=@jobId, @step_name=N'Disable Analysis Managers', 
		@step_id=1, 
		@cmdexec_success_code=0, 
		@on_success_action=1, 
		@on_success_step_id=0, 
		@on_fail_action=2, 
		@on_fail_step_id=0, 
		@retry_attempts=0, 
		@retry_interval=0, 
		@os_run_priority=0, @subsystem=N'TSQL', 
		@command=N'exec DisableAnalysisManagers
	@PreviewUpdates=0
', 
		@database_name=N'Manager_Control', 
		@flags=0
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_update_job @job_id = @jobId, @start_step_id = 1
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobschedule @job_id=@jobId, @name=N'Disable Analysis Managers Once', 
		@enabled=0, 
		@freq_type=1, 
		@freq_interval=0, 
		@freq_subday_type=0, 
		@freq_subday_interval=0, 
		@freq_relative_interval=0, 
		@freq_recurrence_factor=0, 
		@active_start_date=20120731, 
		@active_end_date=99991231, 
		@active_start_time=51000, 
		@active_end_time=235959, 
		@schedule_uid=N'be4b9024-5724-4a1a-836f-9a710be94bc4'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobserver @job_id = @jobId, @server_name = N'(local)'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
COMMIT TRANSACTION
GOTO EndSave
QuitWithRollback:
    IF (@@TRANCOUNT > 0) ROLLBACK TRANSACTION
EndSave:

GO

/****** Object:  Job [Disable Archive-Dependent Managers Once]    Script Date: 07/31/2012 18:53:21 ******/
BEGIN TRANSACTION
DECLARE @ReturnCode INT
SELECT @ReturnCode = 0
/****** Object:  JobCategory [Manager Control]    Script Date: 07/31/2012 18:53:21 ******/
IF NOT EXISTS (SELECT name FROM msdb.dbo.syscategories WHERE name=N'Manager Control' AND category_class=1)
BEGIN
EXEC @ReturnCode = msdb.dbo.sp_add_category @class=N'JOB', @type=N'LOCAL', @name=N'Manager Control'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback

END

DECLARE @jobId BINARY(16)
EXEC @ReturnCode =  msdb.dbo.sp_add_job @job_name=N'Disable Archive-Dependent Managers Once', 
		@enabled=1, 
		@notify_level_eventlog=0, 
		@notify_level_email=2, 
		@notify_level_netsend=0, 
		@notify_level_page=0, 
		@delete_level=0, 
		@description=N'Run this job to disable the space managers when an archive outage will occur. 
Also calls Gigasax.DMS_Capture.dbo.EnableDisableArchiveStepTools to disable step-tools in the DMS_Capture DB', 
		@category_name=N'Manager Control', 
		@owner_login_name=N'sa', 
		@notify_email_operator_name=N'Matthew Monroe', @job_id = @jobId OUTPUT
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
/****** Object:  Step [Disable Archive-Dependent Managers]    Script Date: 07/31/2012 18:53:21 ******/
EXEC @ReturnCode = msdb.dbo.sp_add_jobstep @job_id=@jobId, @step_name=N'Disable Archive-Dependent Managers', 
		@step_id=1, 
		@cmdexec_success_code=0, 
		@on_success_action=3, 
		@on_success_step_id=0, 
		@on_fail_action=2, 
		@on_fail_step_id=0, 
		@retry_attempts=0, 
		@retry_interval=0, 
		@os_run_priority=0, @subsystem=N'TSQL', 
		@command=N'exec DisableArchiveDependentManagers
	@PreviewUpdates=0
', 
		@database_name=N'Manager_Control', 
		@flags=0
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
/****** Object:  Step [Disable DMS_Capture Step Tools]    Script Date: 07/31/2012 18:53:21 ******/
EXEC @ReturnCode = msdb.dbo.sp_add_jobstep @job_id=@jobId, @step_name=N'Disable DMS_Capture Step Tools', 
		@step_id=2, 
		@cmdexec_success_code=0, 
		@on_success_action=1, 
		@on_success_step_id=0, 
		@on_fail_action=2, 
		@on_fail_step_id=0, 
		@retry_attempts=0, 
		@retry_interval=0, 
		@os_run_priority=0, @subsystem=N'TSQL', 
		@command=N'exec Gigasax.DMS_Capture.dbo.EnableDisableArchiveStepTools @enable=0, @DisableComment=''Disabled for scheduled archive maintenance''', 
		@database_name=N'Manager_Control', 
		@flags=0
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_update_job @job_id = @jobId, @start_step_id = 1
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobschedule @job_id=@jobId, @name=N'Disable Archive-Dependent Managers Once', 
		@enabled=0, 
		@freq_type=1, 
		@freq_interval=0, 
		@freq_subday_type=0, 
		@freq_subday_interval=0, 
		@freq_relative_interval=0, 
		@freq_recurrence_factor=0, 
		@active_start_date=20120529, 
		@active_end_date=99991231, 
		@active_start_time=40000, 
		@active_end_time=235959, 
		@schedule_uid=N'ae35d57c-0613-4eda-9173-de8ba3053810'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobserver @job_id = @jobId, @server_name = N'(local)'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
COMMIT TRANSACTION
GOTO EndSave
QuitWithRollback:
    IF (@@TRANCOUNT > 0) ROLLBACK TRANSACTION
EndSave:

GO

/****** Object:  Job [Disable R610 Pubs Once]    Script Date: 07/31/2012 18:53:21 ******/
BEGIN TRANSACTION
DECLARE @ReturnCode INT
SELECT @ReturnCode = 0
/****** Object:  JobCategory [Manager Control]    Script Date: 07/31/2012 18:53:21 ******/
IF NOT EXISTS (SELECT name FROM msdb.dbo.syscategories WHERE name=N'Manager Control' AND category_class=1)
BEGIN
EXEC @ReturnCode = msdb.dbo.sp_add_category @class=N'JOB', @type=N'LOCAL', @name=N'Manager Control'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback

END

DECLARE @jobId BINARY(16)
EXEC @ReturnCode =  msdb.dbo.sp_add_job @job_name=N'Disable R610 Pubs Once', 
		@enabled=1, 
		@notify_level_eventlog=0, 
		@notify_level_email=2, 
		@notify_level_netsend=0, 
		@notify_level_page=0, 
		@delete_level=0, 
		@description=N'No description available.', 
		@category_name=N'Manager Control', 
		@owner_login_name=N'sa', 
		@notify_email_operator_name=N'Matthew Monroe', @job_id = @jobId OUTPUT
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
/****** Object:  Step [Disable R610 Pubs]    Script Date: 07/31/2012 18:53:21 ******/
EXEC @ReturnCode = msdb.dbo.sp_add_jobstep @job_id=@jobId, @step_name=N'Disable R610 Pubs', 
		@step_id=1, 
		@cmdexec_success_code=0, 
		@on_success_action=1, 
		@on_success_step_id=0, 
		@on_fail_action=2, 
		@on_fail_step_id=0, 
		@retry_attempts=0, 
		@retry_interval=0, 
		@os_run_priority=0, @subsystem=N'TSQL', 
		@command=N'exec [DisableAllManagers] 
         @ManagerNameList=''Pub-3[6-9]%,Pub-4[4-9]%,Pub-[5-8]%'', 
         @PreviewUpdates=0', 
		@database_name=N'Manager_Control', 
		@flags=0
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_update_job @job_id = @jobId, @start_step_id = 1
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobschedule @job_id=@jobId, @name=N'Disable Once', 
		@enabled=0, 
		@freq_type=1, 
		@freq_interval=0, 
		@freq_subday_type=0, 
		@freq_subday_interval=0, 
		@freq_relative_interval=0, 
		@freq_recurrence_factor=0, 
		@active_start_date=20100408, 
		@active_end_date=99991231, 
		@active_start_time=130000, 
		@active_end_time=235959, 
		@schedule_uid=N'9e595416-a3ae-4099-b2df-b65cf6b6048e'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobserver @job_id = @jobId, @server_name = N'(local)'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
COMMIT TRANSACTION
GOTO EndSave
QuitWithRollback:
    IF (@@TRANCOUNT > 0) ROLLBACK TRANSACTION
EndSave:

GO

/****** Object:  Job [Disable Sequest Clusters 1, 2, 4, and 5]    Script Date: 07/31/2012 18:53:21 ******/
BEGIN TRANSACTION
DECLARE @ReturnCode INT
SELECT @ReturnCode = 0
/****** Object:  JobCategory [Manager Control]    Script Date: 07/31/2012 18:53:21 ******/
IF NOT EXISTS (SELECT name FROM msdb.dbo.syscategories WHERE name=N'Manager Control' AND category_class=1)
BEGIN
EXEC @ReturnCode = msdb.dbo.sp_add_category @class=N'JOB', @type=N'LOCAL', @name=N'Manager Control'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback

END

DECLARE @jobId BINARY(16)
EXEC @ReturnCode =  msdb.dbo.sp_add_job @job_name=N'Disable Sequest Clusters 1, 2, 4, and 5', 
		@enabled=0, 
		@notify_level_eventlog=0, 
		@notify_level_email=2, 
		@notify_level_netsend=0, 
		@notify_level_page=0, 
		@delete_level=0, 
		@description=N'No description available.', 
		@category_name=N'Manager Control', 
		@owner_login_name=N'sa', 
		@notify_email_operator_name=N'Matthew Monroe', @job_id = @jobId OUTPUT
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
/****** Object:  Step [Disable 4 clusters]    Script Date: 07/31/2012 18:53:21 ******/
EXEC @ReturnCode = msdb.dbo.sp_add_jobstep @job_id=@jobId, @step_name=N'Disable 4 clusters', 
		@step_id=1, 
		@cmdexec_success_code=0, 
		@on_success_action=1, 
		@on_success_step_id=0, 
		@on_fail_action=2, 
		@on_fail_step_id=0, 
		@retry_attempts=0, 
		@retry_interval=0, 
		@os_run_priority=0, @subsystem=N'TSQL', 
		@command=N'exec [DisableAllManagers] 
         @ManagerNameList=''SeqCluster1,SeqCluster2,SeqCluster4,SeqCluster5'', 
         @PreviewUpdates=0', 
		@database_name=N'Manager_Control', 
		@flags=0
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_update_job @job_id = @jobId, @start_step_id = 1
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobschedule @job_id=@jobId, @name=N'Disable 4 clusters once', 
		@enabled=0, 
		@freq_type=1, 
		@freq_interval=0, 
		@freq_subday_type=0, 
		@freq_subday_interval=0, 
		@freq_relative_interval=0, 
		@freq_recurrence_factor=0, 
		@active_start_date=20100208, 
		@active_end_date=99991231, 
		@active_start_time=1500, 
		@active_end_time=235959, 
		@schedule_uid=N'f44afbda-c725-44be-9a56-d4e52bf01106'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobserver @job_id = @jobId, @server_name = N'(local)'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
COMMIT TRANSACTION
GOTO EndSave
QuitWithRollback:
    IF (@@TRANCOUNT > 0) ROLLBACK TRANSACTION
EndSave:

GO

/****** Object:  Job [Disable Sequest Clusters Once]    Script Date: 07/31/2012 18:53:21 ******/
BEGIN TRANSACTION
DECLARE @ReturnCode INT
SELECT @ReturnCode = 0
/****** Object:  JobCategory [Manager Control]    Script Date: 07/31/2012 18:53:21 ******/
IF NOT EXISTS (SELECT name FROM msdb.dbo.syscategories WHERE name=N'Manager Control' AND category_class=1)
BEGIN
EXEC @ReturnCode = msdb.dbo.sp_add_category @class=N'JOB', @type=N'LOCAL', @name=N'Manager Control'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback

END

DECLARE @jobId BINARY(16)
EXEC @ReturnCode =  msdb.dbo.sp_add_job @job_name=N'Disable Sequest Clusters Once', 
		@enabled=0, 
		@notify_level_eventlog=0, 
		@notify_level_email=2, 
		@notify_level_netsend=0, 
		@notify_level_page=0, 
		@delete_level=0, 
		@description=N'No description available.', 
		@category_name=N'Manager Control', 
		@owner_login_name=N'sa', 
		@notify_email_operator_name=N'Matthew Monroe', @job_id = @jobId OUTPUT
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
/****** Object:  Step [Disable Sequest Clusters]    Script Date: 07/31/2012 18:53:22 ******/
EXEC @ReturnCode = msdb.dbo.sp_add_jobstep @job_id=@jobId, @step_name=N'Disable Sequest Clusters', 
		@step_id=1, 
		@cmdexec_success_code=0, 
		@on_success_action=3, 
		@on_success_step_id=0, 
		@on_fail_action=2, 
		@on_fail_step_id=0, 
		@retry_attempts=0, 
		@retry_interval=0, 
		@os_run_priority=0, @subsystem=N'TSQL', 
		@command=N'exec DisableSequestClusters
	@PreviewUpdates=0', 
		@database_name=N'Manager_Control', 
		@flags=0
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_update_job @job_id = @jobId, @start_step_id = 1
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobschedule @job_id=@jobId, @name=N'Disable Sequest Clusters Once', 
		@enabled=0, 
		@freq_type=1, 
		@freq_interval=0, 
		@freq_subday_type=0, 
		@freq_subday_interval=0, 
		@freq_relative_interval=0, 
		@freq_recurrence_factor=0, 
		@active_start_date=20100208, 
		@active_end_date=99991231, 
		@active_start_time=1500, 
		@active_end_time=235959, 
		@schedule_uid=N'5f343d42-a40f-4ce6-b823-ff4ba30ba5e0'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobserver @job_id = @jobId, @server_name = N'(local)'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
COMMIT TRANSACTION
GOTO EndSave
QuitWithRollback:
    IF (@@TRANCOUNT > 0) ROLLBACK TRANSACTION
EndSave:

GO

/****** Object:  Job [Enable All Managers Once]    Script Date: 07/31/2012 18:53:22 ******/
BEGIN TRANSACTION
DECLARE @ReturnCode INT
SELECT @ReturnCode = 0
/****** Object:  JobCategory [Manager Control]    Script Date: 07/31/2012 18:53:21 ******/
IF NOT EXISTS (SELECT name FROM msdb.dbo.syscategories WHERE name=N'Manager Control' AND category_class=1)
BEGIN
EXEC @ReturnCode = msdb.dbo.sp_add_category @class=N'JOB', @type=N'LOCAL', @name=N'Manager Control'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback

END

DECLARE @jobId BINARY(16)
EXEC @ReturnCode =  msdb.dbo.sp_add_job @job_name=N'Enable All Managers Once', 
		@enabled=1, 
		@notify_level_eventlog=0, 
		@notify_level_email=2, 
		@notify_level_netsend=0, 
		@notify_level_page=0, 
		@delete_level=0, 
		@description=N'No description available.', 
		@category_name=N'Manager Control', 
		@owner_login_name=N'sa', 
		@notify_email_operator_name=N'Matthew Monroe', @job_id = @jobId OUTPUT
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
/****** Object:  Step [Enable All Managers Once]    Script Date: 07/31/2012 18:53:22 ******/
EXEC @ReturnCode = msdb.dbo.sp_add_jobstep @job_id=@jobId, @step_name=N'Enable All Managers Once', 
		@step_id=1, 
		@cmdexec_success_code=0, 
		@on_success_action=1, 
		@on_success_step_id=0, 
		@on_fail_action=2, 
		@on_fail_step_id=0, 
		@retry_attempts=0, 
		@retry_interval=0, 
		@os_run_priority=0, @subsystem=N'TSQL', 
		@command=N'exec EnableDisableAllManagers
    @Enable = 1,
    @PreviewUpdates=0,
    @ManagerNameList=''All''', 
		@database_name=N'Manager_Control', 
		@flags=0
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_update_job @job_id = @jobId, @start_step_id = 1
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobschedule @job_id=@jobId, @name=N'Enable All Managers Once', 
		@enabled=0, 
		@freq_type=1, 
		@freq_interval=0, 
		@freq_subday_type=0, 
		@freq_subday_interval=0, 
		@freq_relative_interval=0, 
		@freq_recurrence_factor=0, 
		@active_start_date=20120601, 
		@active_end_date=99991231, 
		@active_start_time=200000, 
		@active_end_time=235959, 
		@schedule_uid=N'b01c651d-011e-4bbc-a8ff-85b8923d41af'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobserver @job_id = @jobId, @server_name = N'(local)'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
COMMIT TRANSACTION
GOTO EndSave
QuitWithRollback:
    IF (@@TRANCOUNT > 0) ROLLBACK TRANSACTION
EndSave:

GO

/****** Object:  Job [Enable Archive-Dependent Managers Once]    Script Date: 07/31/2012 18:53:22 ******/
BEGIN TRANSACTION
DECLARE @ReturnCode INT
SELECT @ReturnCode = 0
/****** Object:  JobCategory [Manager Control]    Script Date: 07/31/2012 18:53:21 ******/
IF NOT EXISTS (SELECT name FROM msdb.dbo.syscategories WHERE name=N'Manager Control' AND category_class=1)
BEGIN
EXEC @ReturnCode = msdb.dbo.sp_add_category @class=N'JOB', @type=N'LOCAL', @name=N'Manager Control'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback

END

DECLARE @jobId BINARY(16)
EXEC @ReturnCode =  msdb.dbo.sp_add_job @job_name=N'Enable Archive-Dependent Managers Once', 
		@enabled=1, 
		@notify_level_eventlog=0, 
		@notify_level_email=2, 
		@notify_level_netsend=0, 
		@notify_level_page=0, 
		@delete_level=0, 
		@description=N'Run this job to enablethe space managers when an archive outage will occur. 
Also calls Gigasax.DMS_Capture.dbo.EnableDisableArchiveStepTools to enable step-tools in the DMS_Capture DB', 
		@category_name=N'Manager Control', 
		@owner_login_name=N'sa', 
		@notify_email_operator_name=N'Matthew Monroe', @job_id = @jobId OUTPUT
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
/****** Object:  Step [Enable Archive-Dependent Managers]    Script Date: 07/31/2012 18:53:22 ******/
EXEC @ReturnCode = msdb.dbo.sp_add_jobstep @job_id=@jobId, @step_name=N'Enable Archive-Dependent Managers', 
		@step_id=1, 
		@cmdexec_success_code=0, 
		@on_success_action=3, 
		@on_success_step_id=0, 
		@on_fail_action=2, 
		@on_fail_step_id=0, 
		@retry_attempts=0, 
		@retry_interval=0, 
		@os_run_priority=0, @subsystem=N'TSQL', 
		@command=N'exec EnableArchiveDependentManagers
	@PreviewUpdates = 0', 
		@database_name=N'Manager_Control', 
		@flags=0
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
/****** Object:  Step [Enable DMS_Capture step tools]    Script Date: 07/31/2012 18:53:22 ******/
EXEC @ReturnCode = msdb.dbo.sp_add_jobstep @job_id=@jobId, @step_name=N'Enable DMS_Capture step tools', 
		@step_id=2, 
		@cmdexec_success_code=0, 
		@on_success_action=1, 
		@on_success_step_id=0, 
		@on_fail_action=2, 
		@on_fail_step_id=0, 
		@retry_attempts=0, 
		@retry_interval=0, 
		@os_run_priority=0, @subsystem=N'TSQL', 
		@command=N'exec Gigasax.DMS_Capture.dbo.EnableDisableArchiveStepTools @enable=1, @DisableComment=''Disabled for scheduled archive maintenance''', 
		@database_name=N'Manager_Control', 
		@flags=0
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_update_job @job_id = @jobId, @start_step_id = 1
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobschedule @job_id=@jobId, @name=N'Enable Archive-Dependent Managers', 
		@enabled=0, 
		@freq_type=1, 
		@freq_interval=0, 
		@freq_subday_type=0, 
		@freq_subday_interval=0, 
		@freq_relative_interval=0, 
		@freq_recurrence_factor=0, 
		@active_start_date=20120529, 
		@active_end_date=99991231, 
		@active_start_time=181500, 
		@active_end_time=235959, 
		@schedule_uid=N'8064c822-5658-467f-a380-c767bad26515'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobserver @job_id = @jobId, @server_name = N'(local)'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
COMMIT TRANSACTION
GOTO EndSave
QuitWithRollback:
    IF (@@TRANCOUNT > 0) ROLLBACK TRANSACTION
EndSave:

GO

/****** Object:  Job [Manager_Control DB - Full Backup]    Script Date: 07/31/2012 18:53:22 ******/
BEGIN TRANSACTION
DECLARE @ReturnCode INT
SELECT @ReturnCode = 0
/****** Object:  JobCategory [Database Maintenance]    Script Date: 07/31/2012 18:53:22 ******/
IF NOT EXISTS (SELECT name FROM msdb.dbo.syscategories WHERE name=N'Database Maintenance' AND category_class=1)
BEGIN
EXEC @ReturnCode = msdb.dbo.sp_add_category @class=N'JOB', @type=N'LOCAL', @name=N'Database Maintenance'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback

END

DECLARE @jobId BINARY(16)
EXEC @ReturnCode =  msdb.dbo.sp_add_job @job_name=N'Manager_Control DB - Full Backup', 
		@enabled=0, 
		@notify_level_eventlog=2, 
		@notify_level_email=2, 
		@notify_level_netsend=0, 
		@notify_level_page=0, 
		@delete_level=0, 
		@description=N'No description available.', 
		@category_name=N'Database Maintenance', 
		@owner_login_name=N'sa', 
		@notify_email_operator_name=N'Matthew Monroe', @job_id = @jobId OUTPUT
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
/****** Object:  Step [Manager_Control DB - Full Backup]    Script Date: 07/31/2012 18:53:22 ******/
EXEC @ReturnCode = msdb.dbo.sp_add_jobstep @job_id=@jobId, @step_name=N'Manager_Control DB - Full Backup', 
		@step_id=1, 
		@cmdexec_success_code=0, 
		@on_success_action=1, 
		@on_success_step_id=0, 
		@on_fail_action=2, 
		@on_fail_step_id=0, 
		@retry_attempts=0, 
		@retry_interval=0, 
		@os_run_priority=0, @subsystem=N'SSIS', 
		@command=N'/Server "$(ESCAPE_NONE(SRVR))" /SQL "Maintenance Plans\Manager_Control DB - Full Backup" /set "\Package\Manager_Control DB - Full Backup.Disable;false"', 
		@flags=0
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_update_job @job_id = @jobId, @start_step_id = 1
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobschedule @job_id=@jobId, @name=N'Manager_Control DB - Full Backup', 
		@enabled=1, 
		@freq_type=4, 
		@freq_interval=1, 
		@freq_subday_type=1, 
		@freq_subday_interval=0, 
		@freq_relative_interval=0, 
		@freq_recurrence_factor=0, 
		@active_start_date=20100115, 
		@active_end_date=99991231, 
		@active_start_time=110000, 
		@active_end_time=235959, 
		@schedule_uid=N'7500daec-5361-418b-b451-5bb0b9ee9167'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobserver @job_id = @jobId, @server_name = N'(local)'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
COMMIT TRANSACTION
GOTO EndSave
QuitWithRollback:
    IF (@@TRANCOUNT > 0) ROLLBACK TRANSACTION
EndSave:

GO

/****** Object:  Job [Master Log Cleanup]    Script Date: 07/31/2012 18:53:22 ******/
BEGIN TRANSACTION
DECLARE @ReturnCode INT
SELECT @ReturnCode = 0
/****** Object:  JobCategory [MTS Auto Update Daily]    Script Date: 07/31/2012 18:53:22 ******/
IF NOT EXISTS (SELECT name FROM msdb.dbo.syscategories WHERE name=N'MTS Auto Update Daily' AND category_class=1)
BEGIN
EXEC @ReturnCode = msdb.dbo.sp_add_category @class=N'JOB', @type=N'LOCAL', @name=N'MTS Auto Update Daily'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback

END

DECLARE @jobId BINARY(16)
EXEC @ReturnCode =  msdb.dbo.sp_add_job @job_name=N'Master Log Cleanup', 
		@enabled=1, 
		@notify_level_eventlog=2, 
		@notify_level_email=2, 
		@notify_level_netsend=0, 
		@notify_level_page=0, 
		@delete_level=0, 
		@description=N'No description available.', 
		@category_name=N'MTS Auto Update Daily', 
		@owner_login_name=N'sa', 
		@notify_email_operator_name=N'Matthew Monroe', @job_id = @jobId OUTPUT
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
/****** Object:  Step [Log cleanup]    Script Date: 07/31/2012 18:53:22 ******/
EXEC @ReturnCode = msdb.dbo.sp_add_jobstep @job_id=@jobId, @step_name=N'Log cleanup', 
		@step_id=1, 
		@cmdexec_success_code=0, 
		@on_success_action=1, 
		@on_success_step_id=0, 
		@on_fail_action=2, 
		@on_fail_step_id=0, 
		@retry_attempts=0, 
		@retry_interval=1, 
		@os_run_priority=0, @subsystem=N'TSQL', 
		@command=N'CleanupLogAllActiveDatabases', 
		@database_name=N'MT_Main', 
		@flags=0
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_update_job @job_id = @jobId, @start_step_id = 1
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobschedule @job_id=@jobId, @name=N'Main', 
		@enabled=1, 
		@freq_type=4, 
		@freq_interval=1, 
		@freq_subday_type=1, 
		@freq_subday_interval=0, 
		@freq_relative_interval=0, 
		@freq_recurrence_factor=0, 
		@active_start_date=20010920, 
		@active_end_date=99991231, 
		@active_start_time=73000, 
		@active_end_time=235959, 
		@schedule_uid=N'85bf96dc-bcba-47c9-8ac6-a7445280c866'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobserver @job_id = @jobId, @server_name = N'(local)'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
COMMIT TRANSACTION
GOTO EndSave
QuitWithRollback:
    IF (@@TRANCOUNT > 0) ROLLBACK TRANSACTION
EndSave:

GO

/****** Object:  Job [MTS plus Other DBs - Integrity and Full Backup]    Script Date: 07/31/2012 18:53:22 ******/
BEGIN TRANSACTION
DECLARE @ReturnCode INT
SELECT @ReturnCode = 0
/****** Object:  JobCategory [Database Maintenance]    Script Date: 07/31/2012 18:53:22 ******/
IF NOT EXISTS (SELECT name FROM msdb.dbo.syscategories WHERE name=N'Database Maintenance' AND category_class=1)
BEGIN
EXEC @ReturnCode = msdb.dbo.sp_add_category @class=N'JOB', @type=N'LOCAL', @name=N'Database Maintenance'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback

END

DECLARE @jobId BINARY(16)
EXEC @ReturnCode =  msdb.dbo.sp_add_job @job_name=N'MTS plus Other DBs - Integrity and Full Backup', 
		@enabled=0, 
		@notify_level_eventlog=2, 
		@notify_level_email=2, 
		@notify_level_netsend=0, 
		@notify_level_page=0, 
		@delete_level=0, 
		@description=N'No description available.', 
		@category_name=N'Database Maintenance', 
		@owner_login_name=N'sa', 
		@notify_email_operator_name=N'Matthew Monroe', @job_id = @jobId OUTPUT
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
/****** Object:  Step [MTS, DMS, plus Other DBs - Integrity and Full Backup]    Script Date: 07/31/2012 18:53:22 ******/
EXEC @ReturnCode = msdb.dbo.sp_add_jobstep @job_id=@jobId, @step_name=N'MTS, DMS, plus Other DBs - Integrity and Full Backup', 
		@step_id=1, 
		@cmdexec_success_code=0, 
		@on_success_action=1, 
		@on_success_step_id=0, 
		@on_fail_action=2, 
		@on_fail_step_id=0, 
		@retry_attempts=0, 
		@retry_interval=0, 
		@os_run_priority=0, @subsystem=N'SSIS', 
		@command=N'/Server "$(ESCAPE_NONE(SRVR))" /SQL "Maintenance Plans\MTS plus Other DBs - Integrity and Full Backup" /set "\Package\MTS, DMS, plus Other DBs - Integrity and Full Backup.Disable;false"', 
		@flags=0
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_update_job @job_id = @jobId, @start_step_id = 1
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobschedule @job_id=@jobId, @name=N'MTS plus Other DBs - Integrity and Full Backup', 
		@enabled=1, 
		@freq_type=8, 
		@freq_interval=64, 
		@freq_subday_type=1, 
		@freq_subday_interval=0, 
		@freq_relative_interval=0, 
		@freq_recurrence_factor=1, 
		@active_start_date=20061121, 
		@active_end_date=99991231, 
		@active_start_time=230000, 
		@active_end_time=235959, 
		@schedule_uid=N'353465d9-ac56-420d-babc-6ff5474556bd'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobserver @job_id = @jobId, @server_name = N'(local)'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
COMMIT TRANSACTION
GOTO EndSave
QuitWithRollback:
    IF (@@TRANCOUNT > 0) ROLLBACK TRANSACTION
EndSave:

GO

/****** Object:  Job [MTS plus Other DBs - Transaction Log Backup]    Script Date: 07/31/2012 18:53:22 ******/
BEGIN TRANSACTION
DECLARE @ReturnCode INT
SELECT @ReturnCode = 0
/****** Object:  JobCategory [Database Maintenance]    Script Date: 07/31/2012 18:53:22 ******/
IF NOT EXISTS (SELECT name FROM msdb.dbo.syscategories WHERE name=N'Database Maintenance' AND category_class=1)
BEGIN
EXEC @ReturnCode = msdb.dbo.sp_add_category @class=N'JOB', @type=N'LOCAL', @name=N'Database Maintenance'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback

END

DECLARE @jobId BINARY(16)
EXEC @ReturnCode =  msdb.dbo.sp_add_job @job_name=N'MTS plus Other DBs - Transaction Log Backup', 
		@enabled=0, 
		@notify_level_eventlog=2, 
		@notify_level_email=2, 
		@notify_level_netsend=0, 
		@notify_level_page=0, 
		@delete_level=0, 
		@description=N'No description available.', 
		@category_name=N'Database Maintenance', 
		@owner_login_name=N'sa', 
		@notify_email_operator_name=N'Matthew Monroe', @job_id = @jobId OUTPUT
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
/****** Object:  Step [MTS, DMS, plus Other DBs - Transaction Log Backup]    Script Date: 07/31/2012 18:53:22 ******/
EXEC @ReturnCode = msdb.dbo.sp_add_jobstep @job_id=@jobId, @step_name=N'MTS, DMS, plus Other DBs - Transaction Log Backup', 
		@step_id=1, 
		@cmdexec_success_code=0, 
		@on_success_action=1, 
		@on_success_step_id=0, 
		@on_fail_action=2, 
		@on_fail_step_id=0, 
		@retry_attempts=0, 
		@retry_interval=0, 
		@os_run_priority=0, @subsystem=N'SSIS', 
		@command=N'/Server "$(ESCAPE_NONE(SRVR))" /SQL "Maintenance Plans\MTS plus Other DBs - Transaction Log Backup" /set "\Package\MTS, DMS, plus Other DBs - Transaction Log Backup.Disable;false"', 
		@flags=0
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_update_job @job_id = @jobId, @start_step_id = 1
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobschedule @job_id=@jobId, @name=N'MTS plus Other DBs - Transaction Log Backup', 
		@enabled=1, 
		@freq_type=8, 
		@freq_interval=63, 
		@freq_subday_type=1, 
		@freq_subday_interval=0, 
		@freq_relative_interval=0, 
		@freq_recurrence_factor=1, 
		@active_start_date=20061121, 
		@active_end_date=99991231, 
		@active_start_time=230000, 
		@active_end_time=235959, 
		@schedule_uid=N'660dc85f-49e2-4eda-b335-0323906e74bb'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobserver @job_id = @jobId, @server_name = N'(local)'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
COMMIT TRANSACTION
GOTO EndSave
QuitWithRollback:
    IF (@@TRANCOUNT > 0) ROLLBACK TRANSACTION
EndSave:

GO

/****** Object:  Job [Pause Master Update]    Script Date: 07/31/2012 18:53:22 ******/
BEGIN TRANSACTION
DECLARE @ReturnCode INT
SELECT @ReturnCode = 0
/****** Object:  JobCategory [MTS Auto Update Daily]    Script Date: 07/31/2012 18:53:22 ******/
IF NOT EXISTS (SELECT name FROM msdb.dbo.syscategories WHERE name=N'MTS Auto Update Daily' AND category_class=1)
BEGIN
EXEC @ReturnCode = msdb.dbo.sp_add_category @class=N'JOB', @type=N'LOCAL', @name=N'MTS Auto Update Daily'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback

END

DECLARE @jobId BINARY(16)
EXEC @ReturnCode =  msdb.dbo.sp_add_job @job_name=N'Pause Master Update', 
		@enabled=1, 
		@notify_level_eventlog=2, 
		@notify_level_email=2, 
		@notify_level_netsend=0, 
		@notify_level_page=0, 
		@delete_level=0, 
		@description=N'No description available.', 
		@category_name=N'MTS Auto Update Daily', 
		@owner_login_name=N'sa', 
		@notify_email_operator_name=N'Matthew Monroe', @job_id = @jobId OUTPUT
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
/****** Object:  Step [Pause Master Update]    Script Date: 07/31/2012 18:53:22 ******/
EXEC @ReturnCode = msdb.dbo.sp_add_jobstep @job_id=@jobId, @step_name=N'Pause Master Update', 
		@step_id=1, 
		@cmdexec_success_code=0, 
		@on_success_action=1, 
		@on_success_step_id=0, 
		@on_fail_action=2, 
		@on_fail_step_id=0, 
		@retry_attempts=0, 
		@retry_interval=1, 
		@os_run_priority=0, @subsystem=N'TSQL', 
		@command=N'exec dbo.MasterUpdateStepPauseControl 
         @Pause = 1, 
         @ProcessingStepNameExclusionFilter = ''MS_Peak_Matching''', 
		@database_name=N'MT_Main', 
		@flags=0
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_update_job @job_id = @jobId, @start_step_id = 1
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobschedule @job_id=@jobId, @name=N'Pause Master Update After Midnight', 
		@enabled=1, 
		@freq_type=4, 
		@freq_interval=1, 
		@freq_subday_type=1, 
		@freq_subday_interval=0, 
		@freq_relative_interval=0, 
		@freq_recurrence_factor=0, 
		@active_start_date=20060310, 
		@active_end_date=99991231, 
		@active_start_time=4500, 
		@active_end_time=235959, 
		@schedule_uid=N'5c767cb2-1c42-4907-9a2c-fcab3b7f5cc1'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobserver @job_id = @jobId, @server_name = N'(local)'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
COMMIT TRANSACTION
GOTO EndSave
QuitWithRollback:
    IF (@@TRANCOUNT > 0) ROLLBACK TRANSACTION
EndSave:

GO

/****** Object:  Job [Refresh Cached DMS Info]    Script Date: 07/31/2012 18:53:22 ******/
BEGIN TRANSACTION
DECLARE @ReturnCode INT
SELECT @ReturnCode = 0
/****** Object:  JobCategory [MTS Auto Update Continuous]    Script Date: 07/31/2012 18:53:22 ******/
IF NOT EXISTS (SELECT name FROM msdb.dbo.syscategories WHERE name=N'MTS Auto Update Continuous' AND category_class=1)
BEGIN
EXEC @ReturnCode = msdb.dbo.sp_add_category @class=N'JOB', @type=N'LOCAL', @name=N'MTS Auto Update Continuous'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback

END

DECLARE @jobId BINARY(16)
EXEC @ReturnCode =  msdb.dbo.sp_add_job @job_name=N'Refresh Cached DMS Info', 
		@enabled=0, 
		@notify_level_eventlog=0, 
		@notify_level_email=2, 
		@notify_level_netsend=0, 
		@notify_level_page=0, 
		@delete_level=0, 
		@description=N'No description available.', 
		@category_name=N'MTS Auto Update Continuous', 
		@owner_login_name=N'sa', 
		@notify_email_operator_name=N'Matthew Monroe', @job_id = @jobId OUTPUT
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
/****** Object:  Step [Refresh Cached DMS Info]    Script Date: 07/31/2012 18:53:22 ******/
EXEC @ReturnCode = msdb.dbo.sp_add_jobstep @job_id=@jobId, @step_name=N'Refresh Cached DMS Info', 
		@step_id=1, 
		@cmdexec_success_code=0, 
		@on_success_action=1, 
		@on_success_step_id=0, 
		@on_fail_action=2, 
		@on_fail_step_id=0, 
		@retry_attempts=0, 
		@retry_interval=0, 
		@os_run_priority=0, @subsystem=N'TSQL', 
		@command=N'exec RefreshCachedDMSInfoIfRequired 
	@UpdateInterval=1, 
	@DynamicMinimumCountThreshold=10000, 
	@UpdateIntervalAllItems=26', 
		@database_name=N'MT_Main', 
		@flags=0
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_update_job @job_id = @jobId, @start_step_id = 1
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobschedule @job_id=@jobId, @name=N'Refresh Cached DMS Job and Dataset Info', 
		@enabled=1, 
		@freq_type=4, 
		@freq_interval=1, 
		@freq_subday_type=8, 
		@freq_subday_interval=1, 
		@freq_relative_interval=0, 
		@freq_recurrence_factor=0, 
		@active_start_date=20070509, 
		@active_end_date=99991231, 
		@active_start_time=5900, 
		@active_end_time=235959, 
		@schedule_uid=N'9933f158-a5c0-4530-ad89-32dd00d2ab93'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobserver @job_id = @jobId, @server_name = N'(local)'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
COMMIT TRANSACTION
GOTO EndSave
QuitWithRollback:
    IF (@@TRANCOUNT > 0) ROLLBACK TRANSACTION
EndSave:

GO

/****** Object:  Job [Refresh Cached DMS Info - Full Refresh]    Script Date: 07/31/2012 18:53:22 ******/
BEGIN TRANSACTION
DECLARE @ReturnCode INT
SELECT @ReturnCode = 0
/****** Object:  JobCategory [MTS Auto Update Daily]    Script Date: 07/31/2012 18:53:22 ******/
IF NOT EXISTS (SELECT name FROM msdb.dbo.syscategories WHERE name=N'MTS Auto Update Daily' AND category_class=1)
BEGIN
EXEC @ReturnCode = msdb.dbo.sp_add_category @class=N'JOB', @type=N'LOCAL', @name=N'MTS Auto Update Daily'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback

END

DECLARE @jobId BINARY(16)
EXEC @ReturnCode =  msdb.dbo.sp_add_job @job_name=N'Refresh Cached DMS Info - Full Refresh', 
		@enabled=0, 
		@notify_level_eventlog=0, 
		@notify_level_email=2, 
		@notify_level_netsend=0, 
		@notify_level_page=0, 
		@delete_level=0, 
		@description=N'No description available.', 
		@category_name=N'MTS Auto Update Daily', 
		@owner_login_name=N'sa', 
		@notify_email_operator_name=N'Matthew Monroe', @job_id = @jobId OUTPUT
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
/****** Object:  Step [Refresh Cached DMS Info - Full]    Script Date: 07/31/2012 18:53:23 ******/
EXEC @ReturnCode = msdb.dbo.sp_add_jobstep @job_id=@jobId, @step_name=N'Refresh Cached DMS Info - Full', 
		@step_id=1, 
		@cmdexec_success_code=0, 
		@on_success_action=1, 
		@on_success_step_id=0, 
		@on_fail_action=2, 
		@on_fail_step_id=0, 
		@retry_attempts=0, 
		@retry_interval=0, 
		@os_run_priority=0, @subsystem=N'TSQL', 
		@command=N'exec RefreshCachedDMSInfoIfRequired 
	@UpdateInterval=1, 
	@DynamicMinimumCountThreshold=10000, 
	@UpdateIntervalAllItems=0', 
		@database_name=N'MT_Main', 
		@flags=0
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_update_job @job_id = @jobId, @start_step_id = 1
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobschedule @job_id=@jobId, @name=N'Refresh Cached DMS Info - Full', 
		@enabled=1, 
		@freq_type=4, 
		@freq_interval=1, 
		@freq_subday_type=1, 
		@freq_subday_interval=0, 
		@freq_relative_interval=0, 
		@freq_recurrence_factor=0, 
		@active_start_date=20080918, 
		@active_end_date=99991231, 
		@active_start_time=2000, 
		@active_end_time=235959, 
		@schedule_uid=N'b50d941b-ded9-4555-b7fc-d6cf14160111'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobserver @job_id = @jobId, @server_name = N'(local)'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
COMMIT TRANSACTION
GOTO EndSave
QuitWithRollback:
    IF (@@TRANCOUNT > 0) ROLLBACK TRANSACTION
EndSave:

GO

/****** Object:  Job [Refresh Cached DMS Mass Correction Factors]    Script Date: 07/31/2012 18:53:23 ******/
BEGIN TRANSACTION
DECLARE @ReturnCode INT
SELECT @ReturnCode = 0
/****** Object:  JobCategory [MTS Auto Update Continuous]    Script Date: 07/31/2012 18:53:23 ******/
IF NOT EXISTS (SELECT name FROM msdb.dbo.syscategories WHERE name=N'MTS Auto Update Continuous' AND category_class=1)
BEGIN
EXEC @ReturnCode = msdb.dbo.sp_add_category @class=N'JOB', @type=N'LOCAL', @name=N'MTS Auto Update Continuous'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback

END

DECLARE @jobId BINARY(16)
EXEC @ReturnCode =  msdb.dbo.sp_add_job @job_name=N'Refresh Cached DMS Mass Correction Factors', 
		@enabled=0, 
		@notify_level_eventlog=0, 
		@notify_level_email=2, 
		@notify_level_netsend=0, 
		@notify_level_page=0, 
		@delete_level=0, 
		@description=N'Refresh Cached DMS Mass Correction Factors', 
		@category_name=N'MTS Auto Update Continuous', 
		@owner_login_name=N'sa', 
		@notify_email_operator_name=N'Matthew Monroe', @job_id = @jobId OUTPUT
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
/****** Object:  Step [Refresh Cached DMS Mass Correction Factors]    Script Date: 07/31/2012 18:53:23 ******/
EXEC @ReturnCode = msdb.dbo.sp_add_jobstep @job_id=@jobId, @step_name=N'Refresh Cached DMS Mass Correction Factors', 
		@step_id=1, 
		@cmdexec_success_code=0, 
		@on_success_action=1, 
		@on_success_step_id=0, 
		@on_fail_action=2, 
		@on_fail_step_id=0, 
		@retry_attempts=0, 
		@retry_interval=0, 
		@os_run_priority=0, @subsystem=N'TSQL', 
		@command=N'exec RefreshCachedDMSMassCorrectionFactors', 
		@database_name=N'MT_Main', 
		@flags=0
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_update_job @job_id = @jobId, @start_step_id = 1
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobschedule @job_id=@jobId, @name=N'Refresh Cached DMS Mass Correction Factors', 
		@enabled=1, 
		@freq_type=4, 
		@freq_interval=1, 
		@freq_subday_type=8, 
		@freq_subday_interval=1, 
		@freq_relative_interval=0, 
		@freq_recurrence_factor=0, 
		@active_start_date=20070306, 
		@active_end_date=99991231, 
		@active_start_time=2600, 
		@active_end_time=235959, 
		@schedule_uid=N'a3d73517-607e-40e4-81c2-c344a9ee9f0d'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobserver @job_id = @jobId, @server_name = N'(local)'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
COMMIT TRANSACTION
GOTO EndSave
QuitWithRollback:
    IF (@@TRANCOUNT > 0) ROLLBACK TRANSACTION
EndSave:

GO

/****** Object:  Job [Reindex Protein_Sequences DB]    Script Date: 07/31/2012 18:53:23 ******/
BEGIN TRANSACTION
DECLARE @ReturnCode INT
SELECT @ReturnCode = 0
/****** Object:  JobCategory [Database Maintenance]    Script Date: 07/31/2012 18:53:23 ******/
IF NOT EXISTS (SELECT name FROM msdb.dbo.syscategories WHERE name=N'Database Maintenance' AND category_class=1)
BEGIN
EXEC @ReturnCode = msdb.dbo.sp_add_category @class=N'JOB', @type=N'LOCAL', @name=N'Database Maintenance'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback

END

DECLARE @jobId BINARY(16)
EXEC @ReturnCode =  msdb.dbo.sp_add_job @job_name=N'Reindex Protein_Sequences DB', 
		@enabled=1, 
		@notify_level_eventlog=0, 
		@notify_level_email=2, 
		@notify_level_netsend=0, 
		@notify_level_page=0, 
		@delete_level=0, 
		@description=N'No description available.', 
		@category_name=N'Database Maintenance', 
		@owner_login_name=N'sa', 
		@notify_email_operator_name=N'Matthew Monroe', @job_id = @jobId OUTPUT
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
/****** Object:  Step [Reindex Protein_Sequences DB]    Script Date: 07/31/2012 18:53:23 ******/
EXEC @ReturnCode = msdb.dbo.sp_add_jobstep @job_id=@jobId, @step_name=N'Reindex Protein_Sequences DB', 
		@step_id=1, 
		@cmdexec_success_code=0, 
		@on_success_action=1, 
		@on_success_step_id=0, 
		@on_fail_action=2, 
		@on_fail_step_id=0, 
		@retry_attempts=0, 
		@retry_interval=0, 
		@os_run_priority=0, @subsystem=N'TSQL', 
		@command=N'exec ReindexDatabase', 
		@database_name=N'Protein_Sequences', 
		@flags=0
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_update_job @job_id = @jobId, @start_step_id = 1
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobschedule @job_id=@jobId, @name=N'Reindex Protein_Sequences every 2 months', 
		@enabled=1, 
		@freq_type=32, 
		@freq_interval=7, 
		@freq_subday_type=1, 
		@freq_subday_interval=0, 
		@freq_relative_interval=1, 
		@freq_recurrence_factor=2, 
		@active_start_date=20100712, 
		@active_end_date=99991231, 
		@active_start_time=130000, 
		@active_end_time=235959, 
		@schedule_uid=N'4a365d95-68ef-489e-b240-29ec0683d22f'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobserver @job_id = @jobId, @server_name = N'(local)'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
COMMIT TRANSACTION
GOTO EndSave
QuitWithRollback:
    IF (@@TRANCOUNT > 0) ROLLBACK TRANSACTION
EndSave:

GO

/****** Object:  Job [Shrink Temp DB]    Script Date: 07/31/2012 18:53:23 ******/
BEGIN TRANSACTION
DECLARE @ReturnCode INT
SELECT @ReturnCode = 0
/****** Object:  JobCategory [MTS Auto Update Daily]    Script Date: 07/31/2012 18:53:23 ******/
IF NOT EXISTS (SELECT name FROM msdb.dbo.syscategories WHERE name=N'MTS Auto Update Daily' AND category_class=1)
BEGIN
EXEC @ReturnCode = msdb.dbo.sp_add_category @class=N'JOB', @type=N'LOCAL', @name=N'MTS Auto Update Daily'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback

END

DECLARE @jobId BINARY(16)
EXEC @ReturnCode =  msdb.dbo.sp_add_job @job_name=N'Shrink Temp DB', 
		@enabled=0, 
		@notify_level_eventlog=2, 
		@notify_level_email=2, 
		@notify_level_netsend=0, 
		@notify_level_page=0, 
		@delete_level=0, 
		@description=N'No description available.', 
		@category_name=N'MTS Auto Update Daily', 
		@owner_login_name=N'sa', 
		@notify_email_operator_name=N'Matthew Monroe', @job_id = @jobId OUTPUT
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
/****** Object:  Step [Shrink Temp DB Log]    Script Date: 07/31/2012 18:53:23 ******/
EXEC @ReturnCode = msdb.dbo.sp_add_jobstep @job_id=@jobId, @step_name=N'Shrink Temp DB Log', 
		@step_id=1, 
		@cmdexec_success_code=0, 
		@on_success_action=3, 
		@on_success_step_id=0, 
		@on_fail_action=2, 
		@on_fail_step_id=0, 
		@retry_attempts=0, 
		@retry_interval=1, 
		@os_run_priority=0, @subsystem=N'TSQL', 
		@command=N'exec ShrinkTempDBLogIfRequired 250
', 
		@database_name=N'MT_Main', 
		@flags=0
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
/****** Object:  Step [Shrink Temp DB]    Script Date: 07/31/2012 18:53:23 ******/
EXEC @ReturnCode = msdb.dbo.sp_add_jobstep @job_id=@jobId, @step_name=N'Shrink Temp DB', 
		@step_id=2, 
		@cmdexec_success_code=0, 
		@on_success_action=1, 
		@on_success_step_id=0, 
		@on_fail_action=2, 
		@on_fail_step_id=0, 
		@retry_attempts=0, 
		@retry_interval=0, 
		@os_run_priority=0, @subsystem=N'TSQL', 
		@command=N'DBCC SHRINKDATABASE (tempdb, 10)', 
		@database_name=N'master', 
		@flags=0
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_update_job @job_id = @jobId, @start_step_id = 1
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobschedule @job_id=@jobId, @name=N'Daily', 
		@enabled=1, 
		@freq_type=4, 
		@freq_interval=1, 
		@freq_subday_type=8, 
		@freq_subday_interval=4, 
		@freq_relative_interval=0, 
		@freq_recurrence_factor=0, 
		@active_start_date=20060228, 
		@active_end_date=99991231, 
		@active_start_time=45900, 
		@active_end_time=235959, 
		@schedule_uid=N'9d594454-eef1-42c4-affc-6a7458f508c0'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobserver @job_id = @jobId, @server_name = N'(local)'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
COMMIT TRANSACTION
GOTO EndSave
QuitWithRollback:
    IF (@@TRANCOUNT > 0) ROLLBACK TRANSACTION
EndSave:

GO

/****** Object:  Job [Unpause Master Update If Idle]    Script Date: 07/31/2012 18:53:23 ******/
BEGIN TRANSACTION
DECLARE @ReturnCode INT
SELECT @ReturnCode = 0
/****** Object:  JobCategory [MTS Auto Update Continuous]    Script Date: 07/31/2012 18:53:23 ******/
IF NOT EXISTS (SELECT name FROM msdb.dbo.syscategories WHERE name=N'MTS Auto Update Continuous' AND category_class=1)
BEGIN
EXEC @ReturnCode = msdb.dbo.sp_add_category @class=N'JOB', @type=N'LOCAL', @name=N'MTS Auto Update Continuous'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback

END

DECLARE @jobId BINARY(16)
EXEC @ReturnCode =  msdb.dbo.sp_add_job @job_name=N'Unpause Master Update If Idle', 
		@enabled=0, 
		@notify_level_eventlog=2, 
		@notify_level_email=2, 
		@notify_level_netsend=0, 
		@notify_level_page=0, 
		@delete_level=0, 
		@description=N'No description available.', 
		@category_name=N'MTS Auto Update Continuous', 
		@owner_login_name=N'sa', 
		@notify_email_operator_name=N'Matthew Monroe', @job_id = @jobId OUTPUT
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
/****** Object:  Step [Unpause Master Update If Idle]    Script Date: 07/31/2012 18:53:23 ******/
EXEC @ReturnCode = msdb.dbo.sp_add_jobstep @job_id=@jobId, @step_name=N'Unpause Master Update If Idle', 
		@step_id=1, 
		@cmdexec_success_code=0, 
		@on_success_action=1, 
		@on_success_step_id=0, 
		@on_fail_action=2, 
		@on_fail_step_id=0, 
		@retry_attempts=0, 
		@retry_interval=1, 
		@os_run_priority=0, @subsystem=N'TSQL', 
		@command=N'exec MT_Main.dbo.MasterUpdateStepUnpauseIfIdle ''%Unpause%''', 
		@database_name=N'MT_Main', 
		@flags=0
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_update_job @job_id = @jobId, @start_step_id = 1
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobschedule @job_id=@jobId, @name=N'Unpause Master Update If Idle - Weekdays', 
		@enabled=1, 
		@freq_type=8, 
		@freq_interval=62, 
		@freq_subday_type=4, 
		@freq_subday_interval=14, 
		@freq_relative_interval=0, 
		@freq_recurrence_factor=1, 
		@active_start_date=20060310, 
		@active_end_date=99991231, 
		@active_start_time=71030, 
		@active_end_time=230000, 
		@schedule_uid=N'aa236a18-fef8-409c-9733-fb5c8cdd6c8c'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobschedule @job_id=@jobId, @name=N'Unpause Master Update If Idle - Weekend Evening', 
		@enabled=1, 
		@freq_type=8, 
		@freq_interval=65, 
		@freq_subday_type=4, 
		@freq_subday_interval=14, 
		@freq_relative_interval=0, 
		@freq_recurrence_factor=1, 
		@active_start_date=20060311, 
		@active_end_date=99991231, 
		@active_start_time=151030, 
		@active_end_time=230000, 
		@schedule_uid=N'25456e42-f0bc-47d1-983e-a5427a3879da'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobschedule @job_id=@jobId, @name=N'Unpause Master Update If Idle - Weekend Morning', 
		@enabled=1, 
		@freq_type=8, 
		@freq_interval=65, 
		@freq_subday_type=4, 
		@freq_subday_interval=14, 
		@freq_relative_interval=0, 
		@freq_recurrence_factor=1, 
		@active_start_date=20060311, 
		@active_end_date=99991231, 
		@active_start_time=61030, 
		@active_end_time=103000, 
		@schedule_uid=N'2f898b6b-fa9d-4387-ba19-f4337099b733'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobserver @job_id = @jobId, @server_name = N'(local)'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
COMMIT TRANSACTION
GOTO EndSave
QuitWithRollback:
    IF (@@TRANCOUNT > 0) ROLLBACK TRANSACTION
EndSave:

GO


/****** Object:  Job [Rebuild MTS DB Indices Monthly]    Script Date: 10/15/2012 14:35:56 ******/
BEGIN TRANSACTION
DECLARE @ReturnCode INT
SELECT @ReturnCode = 0
/****** Object:  JobCategory [Database Maintenance]    Script Date: 10/15/2012 14:35:56 ******/
IF NOT EXISTS (SELECT name FROM msdb.dbo.syscategories WHERE name=N'Database Maintenance' AND category_class=1)
BEGIN
EXEC @ReturnCode = msdb.dbo.sp_add_category @class=N'JOB', @type=N'LOCAL', @name=N'Database Maintenance'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback

END

DECLARE @jobId BINARY(16)
EXEC @ReturnCode =  msdb.dbo.sp_add_job @job_name=N'Rebuild MTS DB Indices Monthly', 
		@enabled=1, 
		@notify_level_eventlog=0, 
		@notify_level_email=2, 
		@notify_level_netsend=0, 
		@notify_level_page=0, 
		@delete_level=0, 
		@description=N'No description available.', 
		@category_name=N'Database Maintenance', 
		@owner_login_name=N'sa', 
		@notify_email_operator_name=N'Matthew Monroe', @job_id = @jobId OUTPUT
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
/****** Object:  Step [Rebuild MTS Indices for All DBs]    Script Date: 10/15/2012 14:35:56 ******/
EXEC @ReturnCode = msdb.dbo.sp_add_jobstep @job_id=@jobId, @step_name=N'Rebuild MTS Indices for All DBs', 
		@step_id=1, 
		@cmdexec_success_code=0, 
		@on_success_action=1, 
		@on_success_step_id=0, 
		@on_fail_action=2, 
		@on_fail_step_id=0, 
		@retry_attempts=0, 
		@retry_interval=0, 
		@os_run_priority=0, @subsystem=N'TSQL', 
		@command=N'exec RebuildMTSDBIndices ''%'', @IncludeMTSInterfaceAndControlDBs=1, @infoonly=0', 
		@database_name=N'MT_Main', 
		@flags=0
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_update_job @job_id = @jobId, @start_step_id = 1
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobschedule @job_id=@jobId, @name=N'Rebuild Indices Monthly', 
		@enabled=1, 
		@freq_type=32, 
		@freq_interval=1, 
		@freq_subday_type=1, 
		@freq_subday_interval=0, 
		@freq_relative_interval=4, 
		@freq_recurrence_factor=1, 
		@active_start_date=20121015, 
		@active_end_date=99991231, 
		@active_start_time=140000, 
		@active_end_time=235959, 
		@schedule_uid=N'52649189-5388-426f-8580-9a5ed9531d3b'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobserver @job_id = @jobId, @server_name = N'(local)'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
COMMIT TRANSACTION
GOTO EndSave
QuitWithRollback:
    IF (@@TRANCOUNT > 0) ROLLBACK TRANSACTION
EndSave:

GO





